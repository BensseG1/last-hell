/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"

#include "StdH.h"

//#include "Models/Weapons/Laser/Projectile/LaserProjectile.h"
#include "EntitiesMP/EnemyBase.h"
//#include "EntitiesMP/Dragonman.h"
#include "Models/Enemies/Elementals/Projectile/IcePyramid.h"
//#include "Models/Enemies/ElementalLava/Projectile/LavaStone.h"
//#include "Models/Enemies/ElementalLava/Projectile/LavaBomb.h"
//#include "Models/Enemies/Headman/Projectile/Blade.h"
#include "Models/Enemies/Huanman/Projectile/Projectile.h"
//#include "Models/Enemies/Cyborg/Projectile/LaserProjectile.h"
	
//#include "ModelsMP/Enemies/Grunt/Projectile/GruntProjectile.h"
//#include "ModelsMP/Enemies/Guffy/Projectile/GuffyProjectile.h"

//#include "ModelsMP/Enemies/ExotechLarva/Weapons/PlasmaGun.h"

#include "EntitiesMP/EnemyBase.h"
#include "EntitiesMP/PlayerWeapons.h"
//#include "EntitiesMP/Shooter.h"
#include "EntitiesMP/MovingBrush.h"
#include "EntitiesMP/Projectile.h"
//#include "EntitiesMP/Demon.h"
//#include "EntitiesMP/AirElemental.h"
//#include "EntitiesMP/Twister.h"

//#define DEVIL_LASER_SPEED 100.0f
//#define DEVIL_ROCKET_SPEED 60.0f

#include <Projectile.h>
#include <Projectile_tables.h>
CEntityEvent *ELaunchProjectile::MakeCopy(void) { 	CEntityEvent *peeCopy = new ELaunchProjectile(*this); 	return peeCopy;}
SLONG ELaunchProjectile::GetSizeOf(void) { 	return sizeof(*this);}
ELaunchProjectile::ELaunchProjectile() : CEntityEvent(EVENTCODE_ELaunchProjectile) {
	ClearToDefault(eidLauncher);
	ClearToDefault(prtType);
	ClearToDefault(fSpeed);
	ClearToDefault(fStretch);
}
BOOL ELaunchProjectile::CheckIDs(void) {	return TRUE && eidLauncher.IsValid(); }

CEntityEvent *EExplode::MakeCopy(void) { 	CEntityEvent *peeCopy = new EExplode(*this); 	return peeCopy;}
SLONG EExplode::GetSizeOf(void) { 	return sizeof(*this);}
EExplode::EExplode() : CEntityEvent(EVENTCODE_EExplode) {
	ClearToDefault(vPosition);
}
BOOL EExplode::CheckIDs(void) {	return TRUE ; }

CEntityEvent *ESpawnFlame::MakeCopy(void) { 	CEntityEvent *peeCopy = new ESpawnFlame(*this); 	return peeCopy;}
SLONG ESpawnFlame::GetSizeOf(void) { 	return sizeof(*this);}
ESpawnFlame::ESpawnFlame() : CEntityEvent(EVENTCODE_ESpawnFlame) {
	ClearToDefault(eidLauncher);
	ClearToDefault(eidAttach);
	ClearToDefault(vPos);
}
BOOL ESpawnFlame::CheckIDs(void) {	return TRUE && eidLauncher.IsValid()&& eidAttach.IsValid(); }

#line 127 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"

//#define DRAGONMAN_NORMAL 0
//#define DRAGONMAN_STRONG 1

#define ELEMENTAL_LARGE   2
#define ELEMENTAL_BIG     1
#define ELEMENTAL_NORMAL  0

//#define ELEMENTAL_STONEMAN 0
//#define ELEMENTAL_LAVAMAN  1
//#define ELEMENTAL_ICEMAN   2


void CProjectile_PrecacheForPlayer()
{
	CDLLEntityClass *pdec = &CProjectile_DLLClass;

	/*
	// rocket launcher
	pdec->PrecacheModel(MODEL_ROCKET  );
	pdec->PrecacheTexture(TEXTURE_ROCKET);
	pdec->PrecacheSound(SOUND_FLYING  );
	pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_ROCKET);
	pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_EXPLOSIONSTAIN);
	pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_SHOCKWAVE);
	pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_ROCKET_PLANE);

	// grenade launcher
	pdec->PrecacheModel(MODEL_GRENADE);
	pdec->PrecacheTexture(TEXTURE_GRENADE);
	pdec->PrecacheSound(SOUND_GRENADE_BOUNCE);
	pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_GRENADE);
	pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_GRENADE_PLANE);
	*/

	// flamer
	pdec->PrecacheModel(MODEL_FLAME);
	pdec->PrecacheClass(CLASS_FLAME);

	// laser
//	pdec->PrecacheModel(MODEL_LASER                   );
//	pdec->PrecacheTexture(TEXTURE_GREEN_LASER         );    
//	pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LASERWAVE);
}

void CProjectile_OnInitClass(void)
{
}

void CProjectile_OnPrecache(CDLLEntityClass *pdec, INDEX iUser) 
{
	pdec->PrecacheTexture(TEX_REFL_BWRIPLES01);
	pdec->PrecacheTexture(TEX_REFL_BWRIPLES02);
	pdec->PrecacheTexture(TEX_REFL_LIGHTMETAL01);
	pdec->PrecacheTexture(TEX_REFL_LIGHTBLUEMETAL01);
	pdec->PrecacheTexture(TEX_REFL_DARKMETAL);
	pdec->PrecacheTexture(TEX_REFL_PURPLE01);

	pdec->PrecacheTexture(TEX_SPEC_WEAK);
	pdec->PrecacheTexture(TEX_SPEC_MEDIUM);
	pdec->PrecacheTexture(TEX_SPEC_STRONG);

	switch ((ProjectileType)iUser) {
	//case PRT_ROCKET                :
	//case PRT_WALKER_ROCKET         :
		/*
	case PRT_DEVIL_ROCKET          :
		pdec->PrecacheModel(MODEL_ROCKET  );
		pdec->PrecacheTexture(TEXTURE_ROCKET);
		pdec->PrecacheSound(SOUND_FLYING  );
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_ROCKET);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_EXPLOSIONSTAIN);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_SHOCKWAVE);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_ROCKET_PLANE);
		break;
	case PRT_GRENADE:
		pdec->PrecacheModel(MODEL_GRENADE);
		pdec->PrecacheTexture(TEXTURE_GRENADE);
		pdec->PrecacheSound(SOUND_GRENADE_BOUNCE);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_GRENADE);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_EXPLOSIONSTAIN);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_SHOCKWAVE);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_GRENADE_PLANE);
		break;
		*/
	
	case PRT_FLAME:
		pdec->PrecacheModel(MODEL_FLAME);
		pdec->PrecacheClass(CLASS_FLAME);
		break;

		/*
	case PRT_LASER_RAY:
		pdec->PrecacheModel(MODEL_LASER                   );
		pdec->PrecacheTexture(TEXTURE_GREEN_LASER         );
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LASERWAVE);
		break;

	case PRT_GRUNT_PROJECTILE_SOL:
		pdec->PrecacheModel(MODEL_GRUNT_PROJECTILE           );
		pdec->PrecacheTexture(TEXTURE_GRUNT_PROJECTILE_01    );
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LASERWAVE);
		break;

	case PRT_GRUNT_PROJECTILE_COM:
		pdec->PrecacheModel(MODEL_GRUNT_PROJECTILE           );
		pdec->PrecacheTexture(TEXTURE_GRUNT_PROJECTILE_02    );
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LASERWAVE);
		break;

	case PRT_CATMAN_FIRE:
		pdec->PrecacheModel(MODEL_CATMAN_FIRE             );
		pdec->PrecacheTexture(TEXTURE_CATMAN_FIRE         );
		break;

	case PRT_HEADMAN_FIRECRACKER:
		pdec->PrecacheModel(MODEL_HEADMAN_FIRECRACKER     );
		pdec->PrecacheTexture(TEXTURE_HEADMAN_FIRECRACKER );
		break;
	case PRT_HEADMAN_ROCKETMAN:
		pdec->PrecacheModel(MODEL_HEADMAN_BLADE           );
		pdec->PrecacheTexture(TEXTURE_HEADMAN_BLADE       );
		pdec->PrecacheModel(MODEL_HEADMAN_BLADE_FLAME     );
		pdec->PrecacheTexture(TEXTURE_HEADMAN_BLADE_FLAME );
		break;
	case PRT_HEADMAN_BOMBERMAN:
		pdec->PrecacheModel(MODEL_HEADMAN_BOMB         );
		pdec->PrecacheTexture(TEXTURE_HEADMAN_BOMB     );  
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_BOMB);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_EXPLOSIONSTAIN);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_GRENADE_PLANE);
		break;

	case PRT_BONEMAN_FIRE:
		pdec->PrecacheModel(MODEL_BONEMAN_FIRE         );
		pdec->PrecacheTexture(TEXTURE_BONEMAN_FIRE     );
		break;

	case PRT_WOMAN_FIRE:
		pdec->PrecacheModel(MODEL_WOMAN_FIRE           );
		pdec->PrecacheTexture(TEXTURE_WOMAN_FIRE       );
		break;

	case PRT_DRAGONMAN_FIRE:
	case PRT_DRAGONMAN_STRONG_FIRE:
		pdec->PrecacheModel(MODEL_DRAGONMAN_FIRE       );
		pdec->PrecacheTexture(TEXTURE_DRAGONMAN_FIRE1  );
		pdec->PrecacheTexture(TEXTURE_DRAGONMAN_FIRE2  );
		break;

	case PRT_STONEMAN_FIRE:
	case PRT_STONEMAN_BIG_FIRE:
	case PRT_STONEMAN_LARGE_FIRE:
		pdec->PrecacheModel(MODEL_ELEM_STONE           );
		pdec->PrecacheTexture(TEXTURE_ELEM_STONE       ); 
		break;
	
	case PRT_LAVAMAN_BIG_BOMB:
	case PRT_LAVAMAN_BOMB:
	case PRT_LAVAMAN_STONE:
		pdec->PrecacheModel(MODEL_ELEM_LAVA_STONE);
		pdec->PrecacheModel(MODEL_ELEM_LAVA_STONE_FLARE);
		pdec->PrecacheModel(MODEL_ELEM_LAVA_BOMB);
		pdec->PrecacheModel(MODEL_ELEM_LAVA_BOMB_FLARE);
		pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_STONE); 
		pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_STONE_FLARE ); 
		pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_BOMB); 
		pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_BOMB_FLARE); 
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_SHOCKWAVE);
		pdec->PrecacheClass(CLASS_BLOOD_SPRAY);
		break;
		*/
		/*
	case PRT_METEOR:
		pdec->PrecacheSound(SOUND_FLYING  );
		pdec->PrecacheSound(SOUND_METEOR_BLAST  );
		pdec->PrecacheModel(MODEL_ELEM_LAVA_BOMB);
		pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_BOMB); 
		pdec->PrecacheClass(CLASS_BLOOD_SPRAY);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_CANNON);

		break;
		*/

	case PRT_ICEMAN_FIRE:
	case PRT_ICEMAN_BIG_FIRE:
	case PRT_ICEMAN_LARGE_FIRE:
		pdec->PrecacheModel(MODEL_ELEM_ICE          );  
		pdec->PrecacheModel(MODEL_ELEM_ICE_FLARE    );  
		pdec->PrecacheTexture(TEXTURE_ELEM_ICE      );    
	//pdec->PrecacheTexture(TEXTURE_ELEM_ICE_FLARE);    
		break;

	case PRT_HUANMAN_FIRE:
		pdec->PrecacheModel(MODEL_HUANMAN_FIRE      );
		pdec->PrecacheTexture(TEXTURE_HUANMAN_FIRE  );
		pdec->PrecacheModel(MODEL_HUANMAN_FLARE     );
		pdec->PrecacheTexture(TEXTURE_HUANMAN_FLARE );
		break;

		/*
	case PRT_FISHMAN_FIRE:
		pdec->PrecacheModel(MODEL_FISHMAN_FIRE      );
		pdec->PrecacheTexture(TEXTURE_FISHMAN_FIRE  );
		break;

	case PRT_MANTAMAN_FIRE:
		pdec->PrecacheModel(MODEL_MANTAMAN_FIRE     );
		pdec->PrecacheTexture(TEXTURE_MANTAMAN_FIRE );
		break;

	//case PRT_DEVIL_LASER:         
		pdec->PrecacheModel(MODEL_DEVIL_LASER      );
		pdec->PrecacheTexture(TEXTURE_DEVIL_LASER  ); 
		break;

	//case PRT_CYBORG_LASER:         
	case PRT_CYBORG_BOMB:
		//pdec->PrecacheModel(MODEL_CYBORG_LASER      );
		//pdec->PrecacheTexture(TEXTURE_CYBORG_LASER  ); 
		pdec->PrecacheModel(MODEL_CYBORG_BOMB       );
		pdec->PrecacheTexture(TEXTURE_CYBORG_BOMB   ); 
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_BOMB);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_EXPLOSIONSTAIN);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_GRENADE_PLANE);
		break;

	case PRT_LAVA_COMET:
		pdec->PrecacheModel(MODEL_ELEM_LAVA_STONE);
		pdec->PrecacheModel(MODEL_ELEM_LAVA_STONE_FLARE);
		pdec->PrecacheModel(MODEL_ELEM_LAVA_BOMB);
		pdec->PrecacheModel(MODEL_ELEM_LAVA_BOMB_FLARE);
		pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_STONE); 
		pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_STONE_FLARE ); 
		pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_BOMB); 
		pdec->PrecacheTexture(TEXTURE_ELEM_LAVA_BOMB_FLARE); 
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_SHOCKWAVE);
		pdec->PrecacheClass(CLASS_BLOOD_SPRAY);
		pdec->PrecacheModel(MODEL_LAVA          );
		pdec->PrecacheTexture(TEXTURE_LAVA      );
		pdec->PrecacheModel(MODEL_LAVA_FLARE    );
		pdec->PrecacheTexture(TEXTURE_LAVA_FLARE);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_SHOCKWAVE);
		pdec->PrecacheClass(CLASS_BLOOD_SPRAY);
		break;
		*/
		/*
	case PRT_BEAST_PROJECTILE:
	case PRT_BEAST_DEBRIS:
		pdec->PrecacheSound(SOUND_BEAST_FLYING  );
		pdec->PrecacheModel(MODEL_BEAST_FIRE);
		pdec->PrecacheTexture(TEXTURE_BEAST_FIRE);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_CANNON);
		break;
		*/
		/*
	case PRT_GUFFY_PROJECTILE:
		pdec->PrecacheSound(SOUND_FLYING                   );
		pdec->PrecacheModel(MODEL_GUFFY_PROJECTILE         );
		pdec->PrecacheTexture(TEXTURE_GUFFY_PROJECTILE     );
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_ROCKET );
		break;
		*/
	//case PRT_BEAST_BIG_PROJECTILE:
	//case PRT_DEVIL_GUIDED_PROJECTILE:
	//case PRT_BEAST_BIG_DEBRIS:
		/*
	case PRT_SHOOTER_FIREBALL:
		pdec->PrecacheSound(SOUND_BEAST_FLYING  );
		pdec->PrecacheModel(MODEL_BEAST_FIRE);
		pdec->PrecacheTexture(TEXTURE_BEAST_BIG_FIRE);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LIGHT_CANNON);
		break;
		*/
		/*
	case PRT_DEMON_FIREBALL:
	case PRT_DEMON_FIREBALL_DEBRIS:
		pdec->PrecacheSound(SOUND_DEMON_FLYING  );
		pdec->PrecacheModel(MODEL_DEMON_FIREBALL);
		pdec->PrecacheTexture(TEXTURE_DEMON_FIREBALL);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LIGHT_CANNON);
		break;
		*/
		/*
	case PRT_LARVA_PLASMA:
		pdec->PrecacheSound(SOUND_DEMON_FLYING  );
		pdec->PrecacheModel(MODEL_LARVA_PLASMA);
		pdec->PrecacheTexture(TEXTURE_LARVA_PLASMA);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_LIGHT_CANNON);    
		break;
		*/
		/*
	case PRT_LARVA_TAIL_PROJECTILE:
		pdec->PrecacheSound(SOUND_LARVETTE  );
		pdec->PrecacheModel(MODEL_LARVA_TAIL);
		pdec->PrecacheTexture(TEXTURE_LARVA_TAIL);
		pdec->PrecacheClass(CLASS_BASIC_EFFECT, BET_CANNON);
		break;
		*/
		/*
	case PRT_SHOOTER_WOODEN_DART:
		pdec->PrecacheModel(MODEL_SHTR_WOODEN_DART);
		pdec->PrecacheTexture(TEX_SHTR_WOODEN_DART);
		break;
	case PRT_SHOOTER_FLAME:
		pdec->PrecacheModel(MODEL_FLAME);
		pdec->PrecacheClass(CLASS_FLAME);
		break;
	case PRT_AIRELEMENTAL_WIND:
		pdec->PrecacheModel(MODEL_WINDBLAST);
		pdec->PrecacheTexture(TEXTURE_WINDBLAST);    
		break;
	case PRT_AFTERBURNER_DEBRIS:
		pdec->PrecacheModel(MODEL_MARKER);
		pdec->PrecacheTexture(TEXTURE_MARKER);    
		break;
		*/
	default:
		ASSERT(FALSE);
	}
}

void CProjectile::SetDefaultProperties(void) {
	m_penLauncher = NULL;
	m_prtType = PRT_FLAME ;
	m_pmtMove = PMT_FLYING ;
	m_penParticles = NULL;
	m_penTarget = NULL;
	m_penLastDamaged = NULL;
	m_fSpeed = 0.0f;
	m_fIgnoreTime = 0.0f;
	m_fFlyTime = 0.0f;
	m_fStartTime = 0.0f;
	m_fDamageAmount = 0.0f;
	m_fRangeDamageAmount = 0.0f;
	m_fDamageHotSpotRange = 0.0f;
	m_fDamageFallOffRange = 0.0f;
	m_fSoundRange = 0.0f;
	m_bExplode = FALSE ;
	m_bLightSource = FALSE ;
	m_bCanHitHimself = FALSE ;
	m_bCanBeDestroyed = FALSE ;
	m_fWaitAfterDeath = 0.0f;
	m_aRotateSpeed = 0.0f;
	m_tmExpandBox = 0.0f;
	m_tmInvisibility = 0.0f;
	m_iRebounds = 0;
	m_fStretch = 1.0f;
	m_soEffect.SetOwner(this);
	m_soEffect.Stop(FALSE);
	m_soExplosion.SetOwner(this);
	m_soExplosion.Stop(FALSE);
	m_fGuidedMaxSpeedFactor = 30.0f;
	bLockedOn = TRUE ;
	m_bLeftFlame = FALSE ;
	m_iLauncherID = -1;
	m_penPrediction = NULL;
	CMovableModelEntity::SetDefaultProperties();
}
void CProjectile::InitializeFromNet() {
#line 666 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ELaunchProjectile  eLaunch ;
#line 667 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ASSERT  (m_iLauncherID  != - 1);
#line 669 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CEntity  * penEntity ;
#line 670 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_iLauncherID  == - 1){
#line 671 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eLaunch  . eidLauncher  = (CEntity  *) NULL ;
#line 672 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}else {
#line 673 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
_pNetwork  -> ga_World  . EntityExists  (m_iLauncherID  , penEntity );
#line 674 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eLaunch  . eidLauncher  = penEntity ;
#line 675 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 677 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eLaunch  . prtType  = m_prtType ;
#line 678 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eLaunch  . fSpeed  = m_fSpeed ;
#line 679 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eLaunch  . fStretch  = m_fStretch ;
#line 680 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Initialize  (eLaunch  , FALSE );
#line 681 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}

#line 684 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
void CProjectile::PreMoving(void) {
#line 685 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_tmExpandBox  > 0){
#line 686 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(_pTimer  -> CurrentTick  () > m_fStartTime  + m_tmExpandBox ){
#line 687 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ChangeCollisionBoxIndexWhenPossible  (1);
#line 688 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_tmExpandBox  = 0;
#line 689 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 690 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 691 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CMovableModelEntity  :: PreMoving  ();
#line 692 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}

#line 695 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
void CProjectile::PostMoving(void) {
#line 696 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CMovableModelEntity  :: PostMoving  ();
#line 698 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_FLAME ){
#line 700 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CContentType  & ctDn  = GetWorld  () -> wo_actContentTypes  [ en_iDnContent  ];
#line 702 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(! (ctDn  . ct_ulFlags  & CTF_BREATHABLE_LUNGS )){
#line 703 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 704 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 705 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 706 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 707 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 708 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 709 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}

#line 712 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
void CProjectile::Read_t(CTStream * istr,BOOL bNetwork) 
#line 713 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 714 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CMovableModelEntity  :: Read_t  (istr  , bNetwork );
#line 716 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_bLightSource ){
#line 717 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetupLightSource  (TRUE );
#line 718 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 719 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}

#line 722 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CLightSource * CProjectile::GetLightSource(void) 
#line 723 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 724 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_bLightSource ){
#line 725 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return & m_lsLightSource ;
#line 726 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}else {
#line 727 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return NULL ;
#line 728 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 729 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
void CProjectile::Copy(CEntity & enOther,ULONG ulFlags) 
#line 732 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 733 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CMovableModelEntity  :: Copy  (enOther  , ulFlags );
#line 734 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CProjectile  * penOther  = (CProjectile  *) (& enOther );
#line 735 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}

#line 737 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
BOOL CProjectile::AdjustShadingParameters(FLOAT3D & vLightDirection,COLOR & colLight,COLOR & colAmbient) 
#line 738 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 740 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CModelObject * pmo  = GetModelObject  ();
#line 741 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if((pmo  != NULL ) && (_pTimer  -> GetLerpedCurrentTick  () < (m_fStartTime  + m_tmInvisibility )))
#line 742 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 744 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
pmo  -> mo_colBlendColor  = 0;
#line 745 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 746 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
else 
#line 747 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 749 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
pmo  -> mo_colBlendColor  = C_WHITE  | CT_OPAQUE ;
#line 750 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 751 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CEntity  :: AdjustShadingParameters  (vLightDirection  , colLight  , colAmbient );
#line 752 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return FALSE ;
#line 753 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}

#line 756 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
void CProjectile::SetupLightSource(BOOL bLive) 
#line 757 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 759 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CLightSource  lsNew ;
#line 760 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
lsNew  . ls_ulFlags  = LSF_NONPERSISTENT  | LSF_DYNAMIC ;
#line 761 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
lsNew  . ls_rHotSpot  = 0.0f;
#line 762 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
switch(m_prtType ){
#line 791 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
case PRT_FLAME : 
#line 792 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_dORANGE ;
#line 793 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 1.0f;
#line 794 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 795 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
break ;
#line 851 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
case PRT_HUANMAN_FIRE : 
#line 852 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
lsNew  . ls_colColor  = C_lBLUE ;
#line 853 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
lsNew  . ls_rFallOff  = 2.0f;
#line 854 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 855 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
break ;
#line 893 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
default  : 
#line 894 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ASSERTALWAYS  ("Unknown light source");
#line 895 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 896 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
lsNew  . ls_ubPolygonalMask  = 0;
#line 897 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
lsNew  . ls_paoLightAnimation  = NULL ;
#line 899 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_lsLightSource  . ls_penEntity  = this ;
#line 900 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_lsLightSource  . SetLightSource  (lsNew );
#line 901 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}

#line 904 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
void CProjectile::RenderParticles(void) {
#line 905 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
switch(m_prtType ){
#line 919 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
case PRT_FLAME : {
#line 921 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fLeaderLiving  , fFollowerLiving  , fInFrontLiving ;
#line 922 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
fInFrontLiving  = 1.05f;
#line 923 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
fLeaderLiving  = _pTimer  -> GetLerpedCurrentTick  () - m_fStartTime ;
#line 925 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_penParticles  != NULL  && ! (m_penParticles  -> GetFlags  () & ENF_DELETED )){
#line 926 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT3D vDirLeader  = en_vCurrentTranslationAbsolute ;
#line 927 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
vDirLeader  . Normalize  ();
#line 929 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(IsOfClass  (m_penParticles  , & CProjectile_DLLClass ))
#line 930 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 931 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CProjectile  & prLast  = (CProjectile  &) * m_penParticles ;
#line 933 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(IsOfClass  (prLast  . m_penParticles  , & CPlayerWeapons_DLLClass ))
#line 934 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 935 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CPlayerWeapons  & plw  = (CPlayerWeapons  &) * prLast  . m_penParticles ;
#line 936 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(! (plw  . GetPlayer  () -> GetFlags  () & ENF_ALIVE ))
#line 937 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 938 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return ;
#line 939 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 940 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CPlacement3D plPipe  , plInFrontOfPipe ;
#line 941 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
((CPlayerWeapons  &) * prLast  . m_penParticles ) . GetFlamerSourcePlacement  (plPipe  , plInFrontOfPipe );
#line 942 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
fFollowerLiving  = _pTimer  -> GetLerpedCurrentTick  () - ((CProjectile  &) * m_penParticles ) . m_fStartTime ;
#line 943 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT3D vDirPipeFront ;
#line 944 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
AnglesToDirectionVector  (plInFrontOfPipe  . pl_OrientationAngle  , vDirPipeFront );
#line 945 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
vDirPipeFront  . Normalize  ();
#line 946 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Particles_FlameThrower  (GetLerpedPlacement  () , plInFrontOfPipe  , 
#line 947 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
vDirLeader  , vDirPipeFront  , 
#line 948 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
fLeaderLiving  , fInFrontLiving  , en_ulID  , FALSE );
#line 949 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 951 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
else 
#line 952 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 953 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
fFollowerLiving  = _pTimer  -> GetLerpedCurrentTick  () - ((CProjectile  &) * m_penParticles ) . m_fStartTime ;
#line 954 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT3D vDirFollower  = ((CMovableModelEntity  *) (CEntity  *) m_penParticles ) -> en_vCurrentTranslationAbsolute ;
#line 955 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
vDirFollower  . Normalize  ();
#line 956 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Particles_FlameThrower  (GetLerpedPlacement  () , m_penParticles  -> GetLerpedPlacement  () , 
#line 957 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
vDirLeader  , vDirFollower  , fLeaderLiving  , fFollowerLiving  , en_ulID  , FALSE );
#line 958 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 960 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}else if(IsOfClass  (m_penParticles  , & CPlayerWeapons_DLLClass )){
#line 961 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CPlayerWeapons  & plw  = (CPlayerWeapons  &) * m_penParticles ;
#line 962 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(! (plw  . GetPlayer  () -> GetFlags  () & ENF_ALIVE ))
#line 963 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 964 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return ;
#line 965 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 966 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CPlacement3D plPipe  , plInFrontOfPipe ;
#line 967 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
plw  . GetFlamerSourcePlacement  (plPipe  , plInFrontOfPipe );
#line 968 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT3D vDirPipeFront ;
#line 969 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
AnglesToDirectionVector  (plInFrontOfPipe  . pl_OrientationAngle  , vDirPipeFront );
#line 970 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT3D vViewDir ;
#line 971 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
AnglesToDirectionVector  (plPipe  . pl_OrientationAngle  , vViewDir );
#line 972 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT3D vDirFollower  = vViewDir  . Normalize  ();
#line 980 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Particles_FlameThrower  (plInFrontOfPipe  , plPipe  , 
#line 981 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
vDirPipeFront  , vDirFollower  , 
#line 982 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
fInFrontLiving  , 0.0f , en_ulID  , TRUE );
#line 984 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Particles_FlameThrowerStart  (plPipe  , plw  . m_tmFlamerStart  , plw  . m_tmFlamerStop );
#line 985 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 986 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 987 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
break ;
#line 988 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 1043 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 1044 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}

#line 2490 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
void CProjectile::LavaBall(void) {
#line 2492 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
InitAsModel  ();
#line 2493 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_FALL );
#line 2494 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 2495 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetModel  (MODEL_LAVA );
#line 2496 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_LAVA );
#line 2497 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
AddAttachment  (0 , MODEL_LAVA_FLARE  , TEXTURE_LAVA_FLARE );
#line 2500 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 0.0f , - m_fSpeed ) , (CMovableEntity  *) & * m_penLauncher );
#line 2501 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , FRnd  () * 360.0f - 180.0f , FRnd  () * 360.0f - 180.0f));
#line 2502 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fFlyTime  = 5.0f;
#line 2503 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fDamageAmount  = 5.0f;
#line 2504 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 5.0f;
#line 2505 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 1.0f;
#line 2506 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 4.0f;
#line 2507 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 2508 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 2509 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 2510 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 2511 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 2512 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 0.0f;
#line 2513 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 2514 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}

#line 2516 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
void CProjectile::LavaBallExplosion(void) {
#line 2517 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ESpawnEffect  ese ;
#line 2518 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT3D vPoint ;
#line 2519 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOATplane3D vPlaneNormal ;
#line 2520 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fDistanceToEdge ;
#line 2521 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge )){
#line 2522 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 3.5f){
#line 2524 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 2525 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ese  . betType  = BET_SHOCKWAVE ;
#line 2526 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 2527 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SpawnEffect  (CPlacement3D (vPoint  , ANGLE3D (0 , 0 , 0)) , ese );
#line 2528 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 2529 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 2530 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}

#line 3069 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
void CProjectile::AfterburnerDebris(void) 
#line 3070 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3071 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Particles_AfterBurner_Prepare  (this );
#line 3073 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
InitAsEditorModel  ();
#line 3074 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetPhysicsFlags  (EPF_MODEL_FALL );
#line 3075 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_PROJECTILE_MAGIC );
#line 3076 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetModel  (MODEL_MARKER );
#line 3077 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetModelMainTexture  (TEXTURE_MARKER );
#line 3079 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
LaunchAsFreeProjectile  (FLOAT3D (0.0f , 0.0f , - m_fSpeed ) , (CMovableEntity  *) & * m_penLauncher );
#line 3080 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (0 , FRnd  () * 360.0f - 180.0f , FRnd  () * 360.0f - 180.0f));
#line 3081 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fFlyTime  = 10.0f;
#line 3082 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fDamageAmount  = 0.0f;
#line 3083 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fRangeDamageAmount  = 0.0f;
#line 3084 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fDamageHotSpotRange  = 0.0f;
#line 3085 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fDamageFallOffRange  = 0.0f;
#line 3086 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fSoundRange  = 0.0f;
#line 3087 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_bExplode  = TRUE ;
#line 3088 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_bLightSource  = FALSE ;
#line 3089 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_bCanHitHimself  = FALSE ;
#line 3090 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_bCanBeDestroyed  = FALSE ;
#line 3091 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fWaitAfterDeath  = 2.0f;
#line 3092 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_pmtMove  = PMT_FLYING ;
#line 3093 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}

#line 3101 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
void CProjectile::ProjectileTouch(CEntityPointer penHit) 
#line 3102 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3104 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3107 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT3D vDirection ;
#line 3108 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fTransLen  = en_vIntendedTranslation  . Length  ();
#line 3109 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(fTransLen  > 0.5f)
#line 3110 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3111 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
vDirection  = en_vIntendedTranslation  / fTransLen ;
#line 3112 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3113 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
else 
#line 3114 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3115 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
vDirection  = - en_vGravityDir ;
#line 3116 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3119 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
const FLOAT fDamageMul  = GetSeriousDamageMultiplier  (m_penLauncher );
#line 3120 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if((m_prtType  == PRT_FLAME ) && m_fWaitAfterDeath  > 0.0f){
#line 3122 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_penLastDamaged  == penHit ){
#line 3123 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return ;
#line 3124 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}else {
#line 3125 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_penLastDamaged  = penHit ;
#line 3126 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3129 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
BOOL bSpawnFlame  = TRUE ;
#line 3130 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
BOOL bInflictDamage  = TRUE ;
#line 3138 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EntityInfo  * pei  = (EntityInfo  *) penHit  -> GetEntityInfo  ();
#line 3139 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(pei  != NULL  && pei  -> Eeibt  == EIBT_ICE )
#line 3140 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3141 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bSpawnFlame  = FALSE ;
#line 3142 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bInflictDamage  = FALSE ;
#line 3143 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3145 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(bSpawnFlame )
#line 3146 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3147 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ESpawnFlame  eFlame ;
#line 3148 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eFlame  . eidLauncher  = m_penLauncher ;
#line 3149 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eFlame  . eidAttach  = penHit ;
#line 3150 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eFlame  . vPos  = GetPlacement  () . pl_PositionVector ;
#line 3151 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eFlame  , TRUE );
#line 3152 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3153 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(bInflictDamage )
#line 3154 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3155 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
InflictDirectDamage  (penHit  , m_penLauncher  , DMT_BURNING  , m_fDamageAmount  * fDamageMul  , 
#line 3156 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
GetPlacement  () . pl_PositionVector  , vDirection );
#line 3157 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3160 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3173 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
else 
#line 3174 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3175 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
InflictDirectDamage  (penHit  , m_penLauncher  , DMT_PROJECTILE  , m_fDamageAmount  * fDamageMul  , 
#line 3176 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
GetPlacement  () . pl_PositionVector  , vDirection );
#line 3177 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3178 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}

#line 3182 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
void CProjectile::ProjectileHit(void) 
#line 3183 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3185 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_bExplode ){
#line 3186 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
const FLOAT fDamageMul  = GetSeriousDamageMultiplier  (m_penLauncher );
#line 3187 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
InflictRangeDamage  (m_penLauncher  , DMT_EXPLOSION  , m_fRangeDamageAmount  * fDamageMul  , 
#line 3188 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
GetPlacement  () . pl_PositionVector  , m_fDamageHotSpotRange  , m_fDamageFallOffRange );
#line 3189 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3191 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_fSoundRange  > 0.0f && IsDerivedFromClass  (m_penLauncher  , & CPlayer_DLLClass ))
#line 3192 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3193 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ESound  eSound ;
#line 3194 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eSound  . EsndtSound  = SNDT_EXPLOSION ;
#line 3195 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eSound  . penTarget  = m_penLauncher ;
#line 3196 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEventInRange  (eSound  , FLOATaabbox3D (GetPlacement  () . pl_PositionVector  , m_fSoundRange ));
#line 3197 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3198 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}

#line 3202 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
void CProjectile::SpawnEffect(const CPlacement3D & plEffect,const ESpawnEffect & eSpawnEffect) {
#line 3205 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}

#line 3212 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
void CProjectile::BounceSound(void) 
#line 3213 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3226 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}

#line 3231 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ANGLE CProjectile::GetRotationSpeed(ANGLE aWantedAngle,ANGLE aRotateSpeed,FLOAT fWaitFrequency) 
#line 3232 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3233 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ANGLE aResult ;
#line 3235 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(aWantedAngle  < - aRotateSpeed  * fWaitFrequency )
#line 3236 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3238 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
aResult  = - aRotateSpeed ;
#line 3239 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3241 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
else if(aWantedAngle  > aRotateSpeed  * fWaitFrequency )
#line 3242 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3244 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
aResult  = + aRotateSpeed ;
#line 3245 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3247 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
else 
#line 3248 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3249 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
aResult  = aWantedAngle  / fWaitFrequency ;
#line 3250 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3251 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return aResult ;
#line 3252 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}

#line 3256 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
void CProjectile::ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 3257 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 3258 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3267 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_FLAME  && IsOfClass  (penInflictor  , & CMovingBrush_DLLClass ))
#line 3268 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3269 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Destroy  (FALSE );
#line 3270 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3272 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CMovableModelEntity  :: ReceiveDamage  (penInflictor  , 
#line 3273 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
dmtType  , fDamageAmmount  , vHitPoint  , vDirection );
#line 3274 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
BOOL CProjectile::
#line 3281 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_Main
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_ELaunchProjectile, "CProjectile::Main expects 'ELaunchProjectile' as input!");	const ELaunchProjectile &eLaunch = (const ELaunchProjectile &)__eeInput;
#line 3283 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_penLauncher  = eLaunch  . eidLauncher ;
#line 3284 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_penLauncher  == NULL ){
#line 3285 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
en_RenderType  = RT_NONE ;
#line 3286 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Destroy  (FALSE );
#line 3287 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3287 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3288 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3289 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ASSERT  (((CEntity  *) eLaunch  . eidLauncher ) != NULL );
#line 3290 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_iLauncherID  = m_penLauncher  -> en_ulID ;
#line 3291 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_prtType  = eLaunch  . prtType ;
#line 3292 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fSpeed  = eLaunch  . fSpeed ;
#line 3293 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fStretch  = eLaunch  . fStretch ;
#line 3296 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fIgnoreTime  = _pTimer  -> CurrentTick  () + 1.0f;
#line 3297 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_penLastDamaged  = NULL ;
#line 3299 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetFlagOn  (ENF_CLIENTHANDLING );
#line 3385 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_bLightSource ){SetupLightSource  (TRUE );}
#line 3388 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fStartTime  = _pTimer  -> CurrentTick  ();
#line 3390 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x01f50003, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50003_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50003
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;

#line 3392 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(_pNetwork  -> IsServer  ()){
#line 3393 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_pmtMove  == PMT_GUIDED ){
#line 3394 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Call(STATE_CURRENT, STATE_CProjectile_ProjectileGuidedFly, TRUE, EVoid());return TRUE;
#line 3395 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}else if(m_pmtMove  == PMT_GUIDED_FAST ){
#line 3396 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Call(STATE_CURRENT, STATE_CProjectile_ProjectileGuidedFastFly, TRUE, EVoid());return TRUE;
#line 3397 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}else if(m_pmtMove  == PMT_FLYING ){
#line 3398 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Call(STATE_CURRENT, STATE_CProjectile_ProjectileFly, TRUE, EVoid());return TRUE;
#line 3399 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}else if(m_pmtMove  == PMT_SLIDING ){
#line 3400 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Call(STATE_CURRENT, STATE_CProjectile_ProjectileSlide, TRUE, EVoid());return TRUE;
#line 3401 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}else if(m_pmtMove  == PMT_FLYING_REBOUNDING ){
#line 3402 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Call(STATE_CURRENT, STATE_CProjectile_ProjectileFlyRebounding, TRUE, EVoid());return TRUE;
#line 3403 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}else if(m_pmtMove  == PMT_GUIDED_SLIDING ){
#line 3404 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Call(STATE_CURRENT, STATE_CProjectile_ProjectileGuidedSlide, TRUE, EVoid());return TRUE;
#line 3405 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3406 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}else {
#line 3407 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3408 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3409 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EExplode):{const EExplode&eexpl= (EExplode&)__eeInput;

#line 3411 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CPlacement3D plPlacement ;
#line 3412 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
plPlacement  . pl_OrientationAngle  = ANGLE3D (0.0f , 0.0f , 0.0f);
#line 3413 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
plPlacement  . pl_PositionVector  = eexpl  . vPosition ;
#line 3414 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetPlacement  (plPlacement );
#line 3415 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50004, FALSE, EInternal());return TRUE;
#line 3416 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ESpawnFlame):{const ESpawnFlame&eFlame= (ESpawnFlame&)__eeInput;

#line 3418 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CEntity  * penLauncher  = (CEntity  *) eFlame  . eidLauncher ;
#line 3419 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CEntity  * penAttach  = (CEntity  *) eFlame  . eidAttach ;
#line 3420 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if((penLauncher  == NULL ) || (penAttach  == NULL )){return TRUE;}
#line 3421 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SpawnFlame  ((CEntity  *) eFlame  . eidLauncher  , (CEntity  *) eFlame  . eidAttach  , eFlame  . vPos );
#line 3422 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3423 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3424 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f50004_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50004

#line 3454 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(!(m_fWaitAfterDeath  > 0.0f)){ Jump(STATE_CURRENT,0x01f50007, FALSE, EInternal());return TRUE;}
#line 3455 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SwitchToEditorModel  ();
#line 3456 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ForceFullStop  ();
#line 3457 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 3459 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_bLightSource ){SetupLightSource  (FALSE );}
#line 3460 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetTimerAfter(m_fWaitAfterDeath );
Jump(STATE_CURRENT, 0x01f50005, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50005_Main_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50005
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01f50006, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CProjectile::H0x01f50006_Main_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50006
;Jump(STATE_CURRENT,0x01f50007, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f50007_Main_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50007

#line 3463 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Destroy  (FALSE );
#line 3465 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3465 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 3469 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileFly(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileFly
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileFly expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 3471 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 3472 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 3474 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 3479 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 3480 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 3481 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 3482 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3482 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3483 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3485 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetTimerAfter(m_fFlyTime );
Jump(STATE_CURRENT, 0x01f50009, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50009_ProjectileFly_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50009
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 3488 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3490 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 3492 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , & CProjectile_DLLClass ) 
#line 3493 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
&& ((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 3496 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(bHit )
#line 3497 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3498 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 3501 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f5000a, FALSE, EInternal());return TRUE;
#line 3502 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3503 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3504 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&etouch= (ETouch&)__eeInput;

#line 3507 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fIgnoreTime  = 0.0f;
#line 3509 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3510 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  = ! ((! m_bCanHitHimself  && IsOfClass  (etouch  . penOther  , & CProjectile_DLLClass ) 
#line 3511 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
&& ((CProjectile  *) & * etouch  . penOther ) -> m_prtType  == m_prtType ));
#line 3513 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(bHit ){
#line 3514 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileTouch  (etouch  . penOther );
#line 3515 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f5000a, FALSE, EInternal());return TRUE;
#line 3516 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3517 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3518 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&e= (EDeath&)__eeInput;

#line 3520 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed ){
#line 3521 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3522 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f5000a, FALSE, EInternal());return TRUE;
#line 3523 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3524 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3525 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;

#line 3527 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3528 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f5000a, FALSE, EInternal());return TRUE;
#line 3529 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3530 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f5000a_ProjectileFly_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5000a

#line 3531 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 3532 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 3533 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 3534 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3534 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 3538 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileGuidedFly(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileGuidedFly
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileGuidedFly expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 3540 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 3541 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 3543 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 3544 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 3545 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 3546 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 3547 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3547 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3548 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3550 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Jump(STATE_CURRENT,0x01f5000e, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f5000e_ProjectileGuidedFly_03(const CEntityEvent &__eeInput)
#line 3551 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5000e
if(!(_pTimer  -> CurrentTick  () < (m_fStartTime  + m_fFlyTime ))){ Jump(STATE_CURRENT,0x01f5000f, FALSE, EInternal());return TRUE;}
#line 3552 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fWaitFrequency  = 0.1f;
#line 3560 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_penTarget  != NULL ){
#line 3562 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EntityInfo  * pei  = (EntityInfo  *) (m_penTarget  -> GetEntityInfo  ());
#line 3563 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT3D vDesiredPosition ;
#line 3564 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
GetEntityInfoPosition  (m_penTarget  , pei  -> vSourceCenter  , vDesiredPosition );
#line 3565 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT3D vDesiredDirection  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Normalize  ();
#line 3567 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ANGLE aWantedHeading  = GetRelativeHeading  (vDesiredDirection );
#line 3572 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ANGLE aHeading  = GetRotationSpeed  (aWantedHeading  , m_aRotateSpeed  , fWaitFrequency );
#line 3575 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fSpeedDecreasingFactor  = ((180 - abs  (aWantedHeading )) / 180.0f);
#line 3577 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fSpeedIncreasingFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 100;
#line 3578 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
fSpeedIncreasingFactor  = ClampDn  (fSpeedIncreasingFactor  , 1.0f);
#line 3580 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fMaxSpeed  = m_fGuidedMaxSpeedFactor  * fSpeedIncreasingFactor ;
#line 3581 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fMinSpeedRatio  = 0.5f;
#line 3582 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fWantedSpeed  = fMaxSpeed  * (fMinSpeedRatio  + (1 - fMinSpeedRatio ) * fSpeedDecreasingFactor );
#line 3584 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetDesiredTranslation  (FLOAT3D (0 , 0 , - fWantedSpeed ));
#line 3587 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 75.0f * (1 + 0.5f * fSpeedDecreasingFactor );
#line 3590 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fDistanceFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 50.0;
#line 3591 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
fDistanceFactor  = ClampUp  (fDistanceFactor  , 4.0f);
#line 3592 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fRNDHeading  = (FRnd  () - 0.5f) * 180 * fDistanceFactor ;
#line 3593 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fRNDPitch  = (FRnd  () - 0.5f) * 90 * fDistanceFactor ;
#line 3596 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(abs  (aWantedHeading ) < 30.0f)
#line 3597 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3599 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ANGLE aWantedPitch  = GetRelativePitch  (vDesiredDirection );
#line 3600 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ANGLE aPitch  = GetRotationSpeed  (aWantedPitch  , m_aRotateSpeed  * 1.5f , fWaitFrequency );
#line 3602 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  + fRNDHeading  , aPitch  + fRNDPitch  , 0));
#line 3603 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3605 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
else 
#line 3606 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3607 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  , fDistanceFactor  * 40 , 0));
#line 3608 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3609 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3611 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetTimerAfter(fWaitFrequency );
Jump(STATE_CURRENT, 0x01f5000c, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f5000c_ProjectileGuidedFly_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5000c
switch(__eeInput.ee_slEvent)
#line 3612 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 3615 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3617 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 3619 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , & CProjectile_DLLClass ) 
#line 3620 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
&& ((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 3623 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(bHit ){
#line 3624 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 3625 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 3626 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 3627 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 3628 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3628 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3629 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3630 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3631 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):
#line 3633 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{const EDeath&e= (EDeath&)__eeInput;

#line 3634 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed )
#line 3635 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3636 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3637 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 3638 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 3639 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 3640 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3640 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3641 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3642 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3643 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):
#line 3645 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{const ETimer&e= (ETimer&)__eeInput;

#line 3646 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f5000d, FALSE, EInternal());return TRUE;
#line 3647 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3648 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f5000d_ProjectileGuidedFly_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5000d
Jump(STATE_CURRENT,0x01f5000e, FALSE, EInternal());return TRUE;
#line 3649 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}BOOL CProjectile::H0x01f5000f_ProjectileGuidedFly_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5000f

#line 3650 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (EExplode  () , TRUE );
#line 3651 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3651 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 3654 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileGuidedFastFly(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileGuidedFastFly
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileGuidedFastFly expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 3656 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 3657 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 3659 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 3660 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 3661 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 3662 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 3663 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3663 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3664 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3666 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Jump(STATE_CURRENT,0x01f50013, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f50013_ProjectileGuidedFastFly_03(const CEntityEvent &__eeInput)
#line 3667 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50013
if(!(_pTimer  -> CurrentTick  () < (m_fStartTime  + m_fFlyTime ))){ Jump(STATE_CURRENT,0x01f50014, FALSE, EInternal());return TRUE;}
#line 3668 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fWaitFrequency  = 0.1f;
#line 3670 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_penTarget  != NULL  && 
#line 3671 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
DistanceTo  (this  , m_penTarget ) < 20.0f && 
#line 3672 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
(m_fStartTime  + m_fFlyTime  - _pTimer  -> CurrentTick  ()) > 1.5f)
#line 3673 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3674 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fFlyTime  = _pTimer  -> CurrentTick  () - m_fStartTime  + 1.5f;
#line 3675 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3676 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_penTarget  != NULL ){
#line 3678 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EntityInfo  * pei  = (EntityInfo  *) (m_penTarget  -> GetEntityInfo  ());
#line 3679 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT3D vDesiredPosition ;
#line 3680 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
GetEntityInfoPosition  (m_penTarget  , pei  -> vSourceCenter  , vDesiredPosition );
#line 3681 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT3D vDesiredDirection  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Normalize  ();
#line 3683 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ANGLE aWantedHeading  = GetRelativeHeading  (vDesiredDirection );
#line 3684 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ANGLE aHeading  = GetRotationSpeed  (aWantedHeading  , 5.0f , fWaitFrequency );
#line 3687 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fSpeedDecreasingFactor  = ((180 - abs  (aWantedHeading )) / 180.0f);
#line 3689 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fSpeedIncreasingFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 100;
#line 3690 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
fSpeedIncreasingFactor  = ClampDn  (fSpeedIncreasingFactor  , 1.0f);
#line 3692 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fMaxSpeed  = m_fGuidedMaxSpeedFactor  * fSpeedIncreasingFactor ;
#line 3693 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fMinSpeedRatio  = 10.0f;
#line 3694 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fWantedSpeed  = fMaxSpeed  * (fMinSpeedRatio  + (1 - fMinSpeedRatio ) * fSpeedDecreasingFactor );
#line 3696 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetDesiredTranslation  (FLOAT3D (0 , 0 , - fWantedSpeed ));
#line 3699 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 110.0f * (1 + 0.5f * fSpeedDecreasingFactor );
#line 3702 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fDistanceFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 50.0;
#line 3703 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
fDistanceFactor  = ClampUp  (fDistanceFactor  , 4.0f);
#line 3706 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(abs  (aWantedHeading ) < 30.0f)
#line 3707 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3708 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bLockedOn  = TRUE ;
#line 3710 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ANGLE aWantedPitch  = GetRelativePitch  (vDesiredDirection );
#line 3711 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ANGLE aPitch  = GetRotationSpeed  (aWantedPitch  , m_aRotateSpeed  * 1.5f , fWaitFrequency );
#line 3713 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  , aPitch  , 0));
#line 3714 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3716 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
else 
#line 3717 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3718 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(bLockedOn )
#line 3719 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3720 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ANGLE3D aBankingUp ;
#line 3721 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
aBankingUp  = GetPlacement  () . pl_OrientationAngle ;
#line 3722 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
aBankingUp  (3) = 0.0f;
#line 3723 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetPlacement  (CPlacement3D (GetPlacement  () . pl_PositionVector  , aBankingUp ));
#line 3724 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3725 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bLockedOn  = FALSE ;
#line 3727 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  , 400 , 0));
#line 3728 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3729 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3731 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetTimerAfter(fWaitFrequency );
Jump(STATE_CURRENT, 0x01f50011, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50011_ProjectileGuidedFastFly_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50011
switch(__eeInput.ee_slEvent)
#line 3732 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&etouch= (ETouch&)__eeInput;

#line 3736 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fIgnoreTime  = 0.0f;
#line 3738 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3739 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  = ! ((! m_bCanHitHimself  && IsOfClass  (etouch  . penOther  , & CProjectile_DLLClass ) 
#line 3740 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
&& ((CProjectile  *) & * etouch  . penOther ) -> m_prtType  == m_prtType ));
#line 3742 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT3D vTrans  = en_vCurrentTranslationAbsolute ;
#line 3743 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  &= Abs  (vTrans  . Normalize  () % FLOAT3D (etouch  . plCollision )) > 0.35;
#line 3745 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(bHit ){
#line 3746 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileTouch  (etouch  . penOther );
#line 3747 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 3748 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 3749 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 3750 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3750 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3751 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3753 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3754 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 3756 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3758 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 3760 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , & CProjectile_DLLClass ) 
#line 3761 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
&& ((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 3768 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(bHit ){
#line 3769 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 3770 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 3771 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 3772 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 3773 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3773 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3774 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3775 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3776 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):
#line 3778 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{const EDeath&e= (EDeath&)__eeInput;

#line 3779 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed )
#line 3780 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3781 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3782 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 3783 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 3784 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 3785 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3785 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3786 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3787 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3788 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):
#line 3790 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{const ETimer&e= (ETimer&)__eeInput;

#line 3791 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50012, FALSE, EInternal());return TRUE;
#line 3792 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3793 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f50012_ProjectileGuidedFastFly_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50012
Jump(STATE_CURRENT,0x01f50013, FALSE, EInternal());return TRUE;
#line 3794 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}BOOL CProjectile::H0x01f50014_ProjectileGuidedFastFly_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50014

#line 3795 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 3796 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 3797 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 3798 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3798 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 3802 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileGuidedSlide(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileGuidedSlide
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileGuidedSlide expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 3804 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 3805 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 3807 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 3808 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 3809 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 3810 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 3811 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3811 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3812 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3814 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Jump(STATE_CURRENT,0x01f50018, FALSE, EInternal());return TRUE;}BOOL CProjectile::H0x01f50018_ProjectileGuidedSlide_03(const CEntityEvent &__eeInput)
#line 3815 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50018
if(!(_pTimer  -> CurrentTick  () < (m_fStartTime  + m_fFlyTime ))){ Jump(STATE_CURRENT,0x01f50019, FALSE, EInternal());return TRUE;}
#line 3816 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fWaitFrequency  = 0.1f;
#line 3817 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_penTarget  != NULL ){
#line 3819 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EntityInfo  * pei  = (EntityInfo  *) (m_penTarget  -> GetEntityInfo  ());
#line 3820 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT3D vDesiredPosition ;
#line 3821 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
GetEntityInfoPosition  (m_penTarget  , pei  -> vSourceCenter  , vDesiredPosition );
#line 3822 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT3D vDesiredDirection  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Normalize  ();
#line 3824 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ANGLE aWantedHeading  = GetRelativeHeading  (vDesiredDirection );
#line 3825 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ANGLE aHeading  = GetRotationSpeed  (aWantedHeading  , m_aRotateSpeed  , fWaitFrequency );
#line 3828 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fSpeedDecreasingFactor  = ((180 - abs  (aWantedHeading )) / 180.0f);
#line 3830 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fSpeedIncreasingFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 100;
#line 3831 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
fSpeedIncreasingFactor  = ClampDn  (fSpeedIncreasingFactor  , 1.0f);
#line 3833 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fMaxSpeed  = 30.0f * fSpeedIncreasingFactor ;
#line 3834 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fMinSpeedRatio  = 0.5f;
#line 3835 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fWantedSpeed  = fMaxSpeed  * (fMinSpeedRatio  + (1 - fMinSpeedRatio ) * fSpeedDecreasingFactor );
#line 3837 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetDesiredTranslation  (FLOAT3D (0 , 0 , - fWantedSpeed ));
#line 3840 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_aRotateSpeed  = 75.0f * (1 + 0.5f * fSpeedDecreasingFactor );
#line 3843 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fDistanceFactor  = (vDesiredPosition  - GetPlacement  () . pl_PositionVector ) . Length  () / 50.0;
#line 3844 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
fDistanceFactor  = ClampUp  (fDistanceFactor  , 4.0f);
#line 3845 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
FLOAT fRNDHeading  = (FRnd  () - 0.5f) * 180 * fDistanceFactor ;
#line 3848 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(abs  (aWantedHeading ) < 30.0f)
#line 3849 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3851 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  + fRNDHeading  , 0 , 0));
#line 3852 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3854 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
else 
#line 3855 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3856 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetDesiredRotation  (ANGLE3D (aHeading  , 0 , 0));
#line 3857 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3858 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3860 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetTimerAfter(fWaitFrequency );
Jump(STATE_CURRENT, 0x01f50016, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f50016_ProjectileGuidedSlide_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50016
switch(__eeInput.ee_slEvent)
#line 3861 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 3864 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3866 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 3868 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , & CProjectile_DLLClass ) 
#line 3869 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
&& ((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 3872 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(bHit ){
#line 3873 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 3874 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 3875 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 3876 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 3877 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3877 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3878 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3879 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3880 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):
#line 3882 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{const EDeath&e= (EDeath&)__eeInput;

#line 3883 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed )
#line 3884 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3885 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3886 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 3887 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 3888 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 3889 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3889 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3890 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3891 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3892 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):
#line 3894 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{const ETimer&e= (ETimer&)__eeInput;

#line 3895 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f50017, FALSE, EInternal());return TRUE;
#line 3896 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 3897 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f50017_ProjectileGuidedSlide_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50017
Jump(STATE_CURRENT,0x01f50018, FALSE, EInternal());return TRUE;
#line 3898 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}BOOL CProjectile::H0x01f50019_ProjectileGuidedSlide_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f50019

#line 3899 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 3900 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 3901 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 3902 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3902 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 3906 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileSlide(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileSlide
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileSlide expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 3908 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 3909 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 3911 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 3912 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 3913 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 3914 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 3915 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 3915 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3916 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3918 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetTimerAfter(m_fFlyTime );
Jump(STATE_CURRENT, 0x01f5001b, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f5001b_ProjectileSlide_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5001b
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 3922 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3924 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 3926 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , & CProjectile_DLLClass ) 
#line 3927 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
&& ((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 3930 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(bHit ){
#line 3931 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(_pNetwork  -> IsServer  ()){
#line 3932 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 3933 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3935 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_FLAME  
#line 3936 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
&& IsDerivedFromClass  ((CEntity  *) & * (epass  . penOther ) , & CEnemyBase_DLLClass )){
#line 3937 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3938 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3947 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f5001c, FALSE, EInternal());return TRUE;
#line 3948 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3949 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3950 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&etouch= (ETouch&)__eeInput;

#line 3953 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fIgnoreTime  = 0.0f;
#line 3955 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 3956 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  = ! (etouch  . penOther  -> GetRenderType  () & RT_BRUSH );
#line 3957 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_prtType  == PRT_FLAME  && ! bHit  && ! m_bLeftFlame )
#line 3958 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
{
#line 3959 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ESpawnFlame  eFlame ;
#line 3960 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eFlame  . eidLauncher  = m_penLauncher ;
#line 3961 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eFlame  . eidAttach  = etouch  . penOther ;
#line 3962 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eFlame  . vPos  = GetPlacement  () . pl_PositionVector ;
#line 3963 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eFlame  , TRUE );
#line 3964 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_bLeftFlame  = TRUE ;
#line 3965 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3966 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(! bHit ){BounceSound  ();}
#line 3968 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (etouch  . penOther  , & CProjectile_DLLClass ) 
#line 3969 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
&& ((CProjectile  *) & * etouch  . penOther ) -> m_prtType  == m_prtType ));
#line 3970 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(bHit ){
#line 3971 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(_pNetwork  -> IsServer  ()){
#line 3972 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileTouch  (etouch  . penOther );
#line 3973 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3974 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f5001c, FALSE, EInternal());return TRUE;
#line 3975 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3977 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(en_vCurrentTranslationAbsolute  . Length  () < 0.25f * en_vDesiredTranslationRelative  . Length  ()){
#line 3978 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(_pNetwork  -> IsServer  ()){
#line 3979 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3980 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3981 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f5001c, FALSE, EInternal());return TRUE;
#line 3982 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3983 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3984 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&e= (EDeath&)__eeInput;

#line 3986 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed ){
#line 3987 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(_pNetwork  -> IsServer  ()){
#line 3988 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3989 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3990 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f5001c, FALSE, EInternal());return TRUE;
#line 3991 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3992 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 3993 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;

#line 3995 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(_pNetwork  -> IsServer  ()){
#line 3996 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 3997 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 3998 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f5001c, FALSE, EInternal());return TRUE;
#line 3999 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ESpawnFlame):{const ESpawnFlame&eFlame= (ESpawnFlame&)__eeInput;

#line 4001 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CEntity  * penLauncher  = (CEntity  *) eFlame  . eidLauncher ;
#line 4002 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CEntity  * penAttach  = (CEntity  *) eFlame  . eidAttach ;
#line 4003 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if((penLauncher  == NULL ) || (penAttach  == NULL )){return TRUE;}
#line 4004 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SpawnFlame  (penLauncher  , penAttach  , eFlame  . vPos );
#line 4005 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 4006 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 4008 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f5001c_ProjectileSlide_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5001c

#line 4010 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 4011 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 4012 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 4014 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 4014 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CProjectile::
#line 4018 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileFlyRebounding(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CProjectile_ProjectileFlyRebounding
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CProjectile::ProjectileFlyRebounding expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 4020 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
CEntity  * penObstacle ;
#line 4021 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(CheckForCollisionNow  (0 , & penObstacle )){
#line 4023 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileTouch  (penObstacle );
#line 4024 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 4025 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 4026 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 4027 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 4027 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 4028 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 4030 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SetTimerAfter(m_fFlyTime );
Jump(STATE_CURRENT, 0x01f5001e, FALSE, EBegin());return TRUE;}BOOL CProjectile::H0x01f5001e_ProjectileFlyRebounding_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5001e
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&epass= (EPass&)__eeInput;

#line 4033 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 4035 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  = epass  . penOther  != m_penLauncher  || _pTimer  -> CurrentTick  () > m_fIgnoreTime ;
#line 4037 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  &= ! ((! m_bCanHitHimself  && IsOfClass  (epass  . penOther  , & CProjectile_DLLClass ) && 
#line 4038 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
((CProjectile  *) & * epass  . penOther ) -> m_prtType  == m_prtType ));
#line 4041 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(bHit ){
#line 4042 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileTouch  (epass  . penOther );
#line 4043 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f5001f, FALSE, EInternal());return TRUE;
#line 4044 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 4045 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 4046 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&etouch= (ETouch&)__eeInput;

#line 4049 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_fIgnoreTime  = 0.0f;
#line 4051 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
BOOL bHit ;
#line 4054 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  = (etouch  . penOther  -> GetRenderType  () == RT_BRUSH );
#line 4056 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(bHit  && m_iRebounds  > 0){
#line 4058 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ReflectDirectionVectorByPlane  (etouch  . plCollision  , en_vCurrentTranslationAbsolute );
#line 4059 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ReflectRotationMatrixByPlane_cols  (etouch  . plCollision  , en_mRotation );
#line 4060 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
m_iRebounds  --;
#line 4061 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}else {
#line 4063 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
bHit  = ! ((! m_bCanHitHimself  && IsOfClass  (etouch  . penOther  , & CProjectile_DLLClass ) && 
#line 4064 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
((CProjectile  *) & * etouch  . penOther ) -> m_prtType  == m_prtType ));
#line 4066 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(bHit ){
#line 4067 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileTouch  (etouch  . penOther );
#line 4068 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f5001f, FALSE, EInternal());return TRUE;
#line 4069 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 4070 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 4071 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 4072 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&e= (EDeath&)__eeInput;

#line 4074 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
if(m_bCanBeDestroyed ){
#line 4075 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 4076 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f5001f, FALSE, EInternal());return TRUE;
#line 4077 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}
#line 4078 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE;
#line 4079 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;

#line 4081 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
ProjectileHit  ();
#line 4082 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
UnsetTimer();Jump(STATE_CURRENT,0x01f5001f, FALSE, EInternal());return TRUE;
#line 4083 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 4084 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
}return TRUE;}BOOL CProjectile::H0x01f5001f_ProjectileFlyRebounding_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01f5001f

#line 4085 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
EExplode  eexpl ;
#line 4086 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
eexpl  . vPosition  = en_plPlacement  . pl_PositionVector ;
#line 4087 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
SendEvent  (eexpl  , TRUE );
#line 4088 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
Return(STATE_CURRENT,EVoid());
#line 4088 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Projectile.es"
return TRUE; ASSERT(FALSE); return TRUE;};
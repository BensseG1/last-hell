/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"

#include "StdH.h"

#include <Camera.h>
#include <Camera_tables.h>
void CCamera::SetDefaultProperties(void) {
	m_tmTime = 5.0f;
	m_fFOV = 90.0f;
	m_fLastFOV = 90.0f;
	m_penTarget = NULL;
	m_strName = "Camera";
	m_penOnBreak = NULL;
	m_bWideScreen = TRUE ;
	m_tmAtMarker = 0.0f;
	m_tmDelta = 0.0f;
	m_vPNp0 = FLOAT3D(0 , 0 , 0);
	m_vPNp1 = FLOAT3D(0 , 0 , 0);
	m_vTNp0 = FLOAT3D(0 , 0 , 0);
	m_vTNp1 = FLOAT3D(0 , 0 , 0);
	m_fFOVp0 = 0.0f;
	m_fFOVp1 = 0.0f;
	m_fTFOVp0 = 0.0f;
	m_fTFOVp1 = 0.0f;
	m_qPNp0 = FLOATquat3D(0 , 0 , 0 , 0);
	m_qPNp1 = FLOATquat3D(0 , 0 , 0 , 0);
	m_qANp0 = FLOATquat3D(0 , 0 , 0 , 0);
	m_qANp1 = FLOATquat3D(0 , 0 , 0 , 0);
	m_penTargetOld = NULL;
	m_penLast = NULL;
	m_penPlayer = NULL;
	m_strDescription = "";
	m_bStopMoving = FALSE ;
	m_colFade0 = 0;
	m_colFade1 = 0;
	m_bMoving = FALSE ;
	m_penViewTarget0 = NULL;
	m_penViewTarget1 = NULL;
	m_vPosRatio0 = FLOAT3D(0 , 0 , 0);
	m_vPosRatio1 = FLOAT3D(0 , 0 , 0);
	m_fMyTimer = 0.0f;
	m_fMyTimerLast = 0.0f;
	m_bIgnoreTimeStretch = FALSE ;
	m_bAutoRotation = FALSE ;
	m_fStartHdg = 0.0f;
	m_fRotateSpeed = 180.0f;
	m_fRotateTime = 8.0f;
	m_fRadX = 8.0f;
	m_fHeight = 4.0f;
	m_fRadZ = 8.0f;
	m_penAutoCameraEndTarget = NULL;
	m_eetAutoCameraEndEvent = EET_STOP ;
	m_vRelTargetOffset = FLOAT3D(0 , 0 , 0);
	m_bStopLerp = FALSE ;
	bPlayedCamera = FALSE ;
	m_penActionTarget = NULL;
	m_bActive = TRUE ;
	CMovableModelEntity::SetDefaultProperties();
}
void CCamera::Read_t(CTStream * istr,BOOL bNetwork) 
#line 83 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 84 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CMovableModelEntity  :: Read_t  (istr  , bNetwork );
#line 85 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
bPlayedCamera  = FALSE ;
#line 86 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penTargetOld  = m_penTarget ;
#line 87 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}

#line 91 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
void CCamera::RenderParticles(void) 
#line 92 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 93 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(Particle_GetViewer  () == this ){
#line 94 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Particles_ViewerLocal  (this );
#line 95 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 96 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}

#line 99 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
BOOL CCamera::MovesByTargetedRoute(CTString & strTargetProperty)const 
#line 100 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 101 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
strTargetProperty  = "Target";
#line 102 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE ;
#line 103 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}

#line 106 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
BOOL CCamera::DropsMarker(CTFileName & fnmMarkerClass,CTString & strTargetProperty)const 
#line 107 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 108 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
fnmMarkerClass  = CTFILENAME  ("Classes\\CameraMarker.ecl");
#line 109 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
strTargetProperty  = "Target";
#line 110 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE ;
#line 111 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}

#line 114 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
const CTString & CCamera::GetDescription(void)const 
#line 115 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 116 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_penTarget  != NULL ){
#line 117 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
((CTString &) m_strDescription ) . PrintF  ("->%s" , m_penTarget  -> GetName  ());
#line 118 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}else {
#line 119 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
((CTString &) m_strDescription ) . PrintF  ("-><none>");
#line 120 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 121 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return m_strDescription ;
#line 122 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}

#line 124 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
void CCamera::GetAutoRotatePlacement(FLOAT tmCurrent,FLOAT3D & vPos,FLOATmatrix3D & mRot,
#line 125 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CPlacement3D & plNew,FLOAT3D vTarget)const 
#line 126 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 128 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fT  = m_fStartHdg  + m_fRotateSpeed  * tmCurrent ;
#line 129 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fX  = m_fRadX  * Sin  (fT );
#line 130 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fZ  = m_fRadZ  * Cos  (fT );
#line 131 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
vPos  = FLOAT3D (fX  , - m_fHeight  , fZ );
#line 132 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT3D vDir  = vPos ;
#line 133 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
vDir  . Normalize  ();
#line 134 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
ANGLE3D ang ;
#line 135 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
DirectionVectorToAngles  (vDir  , ang );
#line 136 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
plNew  . pl_PositionVector  = vTarget  - vPos ;
#line 137 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
plNew  . pl_OrientationAngle  = ang ;
#line 139 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
MakeRotationMatrix  (mRot  , ang );
#line 140 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return ;
#line 141 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}

#line 143 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CPlacement3D CCamera::GetLerpedPlacement(void)const 
#line 144 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 145 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fLerpFactor ;
#line 146 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
fLerpFactor  = _pTimer  -> GetLerpFactor2  ();
#line 148 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_bAutoRotation  && m_bMoving )
#line 149 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 150 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fTime  = Lerp  (m_fMyTimerLast  , m_fMyTimer  , fLerpFactor );
#line 152 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT3D vPos ;
#line 153 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOATmatrix3D mRot ;
#line 154 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CPlacement3D plNew ;
#line 156 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT3D vTarget  = FLOAT3D (0 , 0 , 0);
#line 157 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_penTarget  != NULL )
#line 158 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 159 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CCameraMarker  * pcm  = & (CCameraMarker  &) * m_penTarget ;
#line 160 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(pcm  -> m_penViewTarget  != NULL )
#line 161 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 162 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
vTarget  = pcm  -> m_penViewTarget  -> GetLerpedPlacement  () . pl_PositionVector  + m_vRelTargetOffset ;
#line 163 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 164 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(pcm  -> m_bTargetCaller  && m_penPlayer  != NULL )
#line 165 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 166 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
vTarget  = m_penPlayer  -> GetLerpedPlacement  () . pl_PositionVector  + m_vRelTargetOffset ;
#line 167 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 168 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 170 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
GetAutoRotatePlacement  (fTime  , vPos  , mRot  , plNew  , vTarget );
#line 171 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return plNew ;
#line 172 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 173 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
else if(m_penViewTarget0  != NULL )
#line 174 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 175 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CPlacement3D plNew  = LerpPlacementsPrecise  (en_plLastPlacement  , en_plPlacement  , fLerpFactor );
#line 176 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOATmatrix3D mRot ;
#line 177 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CalcTargetedRotation  (plNew  . pl_PositionVector  , m_penViewTarget0  , m_vPosRatio0  , mRot  , TRUE );
#line 178 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
DecomposeRotationMatrixNoSnap  (plNew  . pl_OrientationAngle  , mRot );
#line 179 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return plNew ;
#line 180 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 181 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
else 
#line 182 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 184 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(! m_bStopLerp )
#line 185 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 187 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CPlacement3D plLerped ;
#line 188 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
plLerped  . Lerp  (en_plLastPlacement  , en_plPlacement  , fLerpFactor );
#line 189 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return plLerped ;
#line 191 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 192 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
else 
#line 193 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 194 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return en_plLastPlacement ;
#line 196 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 198 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 200 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}

#line 203 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
void CCamera::CalcTargetedRotation(const FLOAT3D & vMyPos,CEntity * penViewTarget,
#line 204 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT3D vPosRatio,FLOATmatrix3D & mRotTarget,BOOL bLerping)const 
#line 205 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 206 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT3D vAbsPos ;
#line 207 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
penViewTarget  -> GetEntityPointRatio  (vPosRatio  , vAbsPos  , bLerping );
#line 208 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT3D vDir ;
#line 209 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
vDir  = vAbsPos  - vMyPos ;
#line 210 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
vDir  . Normalize  ();
#line 211 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
ANGLE3D aDir ;
#line 212 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
DirectionVectorToAnglesNoSnap  (vDir  , aDir );
#line 213 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
MakeRotationMatrixFast  (mRotTarget  , aDir );
#line 214 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}

#line 216 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
void CCamera::PreMoving() 
#line 217 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 219 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(! m_bStopLerp )
#line 220 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 221 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
en_plLastPlacement  = en_plPlacement ;
#line 222 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 223 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}

#line 225 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
void CCamera::DoMoving() 
#line 226 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 227 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(! m_bMoving )
#line 228 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 229 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return ;
#line 230 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 231 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT tmCurrent ;
#line 232 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(! m_bIgnoreTimeStretch )
#line 233 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 234 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
tmCurrent  = _pTimer  -> CurrentTick  ();
#line 235 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 236 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
else 
#line 237 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 238 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_fMyTimerLast  = m_fMyTimer ;
#line 239 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(_pNetwork  -> ga_bDemoPlay ){
#line 240 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_fMyTimer  += _pTimer  -> TickQuantum  / _pNetwork  -> ga_fDemoRealTimeFactor ;
#line 241 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}else {
#line 242 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_fMyTimer  += _pTimer  -> TickQuantum  / _pNetwork  -> GetRealTimeFactor  ();
#line 243 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 244 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
tmCurrent  = m_fMyTimer ;
#line 245 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 247 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_bAutoRotation )
#line 248 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 250 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(tmCurrent  > m_fRotateTime )
#line 251 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 252 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_bStopMoving  = TRUE ;
#line 253 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return ;
#line 254 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 255 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT3D vPos ;
#line 256 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOATmatrix3D mRot ;
#line 257 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CPlacement3D plNew ;
#line 259 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT3D vTarget  = FLOAT3D (0 , 0 , 0);
#line 260 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_penTarget  != NULL )
#line 261 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 262 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CCameraMarker  * pcm  = & (CCameraMarker  &) * m_penTarget ;
#line 263 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(pcm  -> m_penViewTarget  != NULL )
#line 264 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 265 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
vTarget  = pcm  -> m_penViewTarget  -> GetPlacement  () . pl_PositionVector  + m_vRelTargetOffset ;
#line 266 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 267 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(pcm  -> m_bTargetCaller  && m_penPlayer  != NULL )
#line 268 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 269 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
vTarget  = m_penPlayer  -> GetLerpedPlacement  () . pl_PositionVector  + m_vRelTargetOffset ;
#line 270 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 271 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 272 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
GetAutoRotatePlacement  (tmCurrent  , vPos  , mRot  , plNew  , vTarget );
#line 273 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
en_vNextPosition  = vPos ;
#line 274 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
en_mNextRotation  = mRot ;
#line 275 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CacheNearPolygons  ();
#line 276 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
SetPlacement_special  (plNew  , mRot  , SPIF_NEAR );
#line 277 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return ;
#line 278 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 281 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
BOOL bLerping  = TRUE ;
#line 284 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(tmCurrent  > (m_tmAtMarker  + m_tmDelta  - _pTimer  -> TickQuantum  * 3 / 2))
#line 285 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 287 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CCameraMarker  * pcmNm1  = & (CCameraMarker  &) * m_penLast ;
#line 288 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CCameraMarker  * pcmNp0  = & (CCameraMarker  &) * m_penTarget ;
#line 289 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CCameraMarker  * pcmNp1  = & (CCameraMarker  &) * pcmNp0  -> m_penTarget ;
#line 290 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CCameraMarker  * pcmNp2  = & (CCameraMarker  &) * pcmNp1  -> m_penTarget ;
#line 293 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FOREVER {
#line 295 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(pcmNp0  -> m_penTrigger  != NULL ){
#line 297 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
SendToTarget  (pcmNp0  -> m_penTrigger  , EET_TRIGGER  , m_penPlayer );
#line 298 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 301 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(! pcmNp0  -> m_bSkipToNext ){
#line 303 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
break ;
#line 304 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 307 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
pcmNm1  = pcmNp0 ;
#line 308 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
pcmNp0  = pcmNp1 ;
#line 309 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
pcmNp1  = pcmNp2 ;
#line 310 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
pcmNp2  = (CCameraMarker  *) & * pcmNp2  -> m_penTarget ;
#line 313 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
bLerping  = FALSE ;
#line 314 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 317 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penTarget  = pcmNp1 ;
#line 318 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penLast  = pcmNp0 ;
#line 321 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CCameraMarker  & cmNm1  = * pcmNm1 ;
#line 322 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CCameraMarker  & cmNp0  = * pcmNp0 ;
#line 323 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CCameraMarker  & cmNp1  = * pcmNp1 ;
#line 324 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CCameraMarker  & cmNp2  = * pcmNp2 ;
#line 327 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
const FLOAT3D & vPNm1  = cmNm1  . GetPlacement  () . pl_PositionVector ;
#line 328 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
const FLOAT3D & vPNp0  = cmNp0  . GetPlacement  () . pl_PositionVector ;
#line 329 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
const FLOAT3D & vPNp1  = cmNp1  . GetPlacement  () . pl_PositionVector ;
#line 330 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
const FLOAT3D & vPNp2  = cmNp2  . GetPlacement  () . pl_PositionVector ;
#line 331 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
ANGLE3D aPNm1  = cmNm1  . GetPlacement  () . pl_OrientationAngle ;
#line 332 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
ANGLE3D aPNp0  = cmNp0  . GetPlacement  () . pl_OrientationAngle ;
#line 333 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
ANGLE3D aPNp1  = cmNp1  . GetPlacement  () . pl_OrientationAngle ;
#line 334 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
ANGLE3D aPNp2  = cmNp2  . GetPlacement  () . pl_OrientationAngle ;
#line 335 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fFOVm1  = cmNm1  . m_fFOV ;
#line 336 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fFOVp0  = cmNp0  . m_fFOV ;
#line 337 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fFOVp1  = cmNp1  . m_fFOV ;
#line 338 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fFOVp2  = cmNp2  . m_fFOV ;
#line 339 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_colFade0  = cmNp0  . m_colFade ;
#line 340 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_colFade1  = cmNp1  . m_colFade ;
#line 341 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penViewTarget0  = cmNp0  . m_penViewTarget ;
#line 342 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penViewTarget1  = cmNp1  . m_penViewTarget ;
#line 343 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_vPosRatio0  = FLOAT3D (0 , 0 , 0);
#line 344 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_vPosRatio1  = FLOAT3D (0 , 0 , 0);
#line 346 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_penPlayer  != NULL )
#line 347 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 348 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(cmNp0  . m_bTargetCaller ){m_penViewTarget0  = m_penPlayer ;}
#line 349 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(cmNp1  . m_bTargetCaller ){m_penViewTarget1  = m_penPlayer ;}
#line 350 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 352 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_penViewTarget0  != NULL )
#line 353 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 354 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_vPosRatio0  = cmNp0  . m_vPosRatio ;
#line 355 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 356 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_penViewTarget1  != NULL )
#line 357 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 358 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_vPosRatio1  = cmNp1  . m_vPosRatio ;
#line 359 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 362 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOATquat3D qPNm1 ;qPNm1  . FromEuler  (aPNm1 );
#line 363 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOATquat3D qPNp0 ;qPNp0  . FromEuler  (aPNp0 );
#line 364 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOATquat3D qPNp1 ;qPNp1  . FromEuler  (aPNp1 );
#line 365 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOATquat3D qPNp2 ;qPNp2  . FromEuler  (aPNp2 );
#line 368 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(qPNm1  % qPNp0  < 0){
#line 369 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
qPNp0  = - qPNp0 ;
#line 370 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 371 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(qPNp0  % qPNp1  < 0){
#line 372 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
qPNp1  = - qPNp1 ;
#line 373 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 374 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(qPNp1  % qPNp2  < 0){
#line 375 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
qPNp2  = - qPNp2 ;
#line 376 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 379 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_tmAtMarker  = m_tmAtMarker  + m_tmDelta ;
#line 380 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_tmDelta  = cmNp0  . m_fDeltaTime ;
#line 381 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_vPNp0  = vPNp0 ;
#line 382 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_vPNp1  = vPNp1 ;
#line 383 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_fFOVp0  = fFOVp0 ;
#line 384 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_fFOVp1  = fFOVp1 ;
#line 385 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_qPNp0  = qPNp0 ;
#line 386 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_qPNp1  = qPNp1 ;
#line 389 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT tmDNm1  = cmNm1  . m_fDeltaTime ;
#line 390 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT tmDNp0  = cmNp0  . m_fDeltaTime ;
#line 391 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT tmDNp1  = cmNp1  . m_fDeltaTime ;
#line 392 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fD0  = 2 * tmDNp0  / (tmDNm1  + tmDNp0 );
#line 393 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fD1  = 2 * tmDNp0  / (tmDNp0  + tmDNp1 );
#line 396 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fBNp0  = cmNp0  . m_fBias ;
#line 397 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fTNp0  = cmNp0  . m_fTension ;
#line 398 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fCNp0  = cmNp0  . m_fContinuity ;
#line 399 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fBNp1  = cmNp1  . m_fBias ;
#line 400 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fTNp1  = cmNp1  . m_fTension ;
#line 401 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fCNp1  = cmNp1  . m_fContinuity ;
#line 403 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fF00  = (1 - fTNp0 ) * (1 - fCNp0 ) * (1 - fBNp0 ) / 2;
#line 404 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fF01  = (1 - fTNp0 ) * (1 + fCNp0 ) * (1 + fBNp0 ) / 2;
#line 405 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fF10  = (1 - fTNp1 ) * (1 + fCNp1 ) * (1 - fBNp1 ) / 2;
#line 406 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fF11  = (1 - fTNp1 ) * (1 - fCNp1 ) * (1 + fBNp1 ) / 2;
#line 409 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_vTNp0  = ((vPNp1  - vPNp0 ) * fF00  + (vPNp0  - vPNm1 ) * fF01 ) * fD0 ;
#line 410 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_vTNp1  = ((vPNp2  - vPNp1 ) * fF10  + (vPNp1  - vPNp0 ) * fF11 ) * fD1 ;
#line 413 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_fTFOVp0  = ((fFOVp1  - fFOVp0 ) * fF00  + (fFOVp0  - fFOVm1 ) * fF01 ) * fD0 ;
#line 414 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_fTFOVp1  = ((fFOVp2  - fFOVp1 ) * fF10  + (fFOVp1  - fFOVp0 ) * fF11 ) * fD1 ;
#line 417 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOATquat3D qTNp0  , qTNp1 ;
#line 418 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
qTNp0  = (Log  (qPNp0  . Inv  () * qPNp1 ) * fF00  + Log  (qPNm1  . Inv  () * qPNp0 ) * fF01 ) * fD0 ;
#line 419 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
qTNp1  = (Log  (qPNp1  . Inv  () * qPNp2 ) * fF10  + Log  (qPNp0  . Inv  () * qPNp1 ) * fF11 ) * fD1 ;
#line 422 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_qANp0  = qPNp0  * Exp  ((qTNp0  - Log  (qPNp0  . Inv  () * qPNp1 )) / 2);
#line 423 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_qANp1  = qPNp1  * Exp  ((Log  (qPNp0  . Inv  () * qPNp1 ) - qTNp1 ) / 2);
#line 426 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(cmNp0  . m_bStopMoving )
#line 427 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 428 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_bStopMoving  = TRUE ;
#line 430 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(_bLoginProcess  && ! _bWorldEditorApp )
#line 431 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 432 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_bMoving  = FALSE ;
#line 433 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 434 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 435 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 438 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fT  = (tmCurrent  - m_tmAtMarker ) / m_tmDelta ;
#line 439 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fH0  = 2 * fT  * fT  * fT  - 3 * fT  * fT  + 1;
#line 440 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fH1  = - 2 * fT  * fT  * fT  + 3 * fT  * fT ;
#line 441 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fH2  = fT  * fT  * fT  - 2 * fT  * fT  + fT ;
#line 442 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fH3  = fT  * fT  * fT  - fT  * fT ;
#line 445 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT3D vPos  = m_vPNp0  * fH0  + m_vPNp1  * fH1  + m_vTNp0  * fH2  + m_vTNp1  * fH3 ;
#line 446 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fFOV  = m_fFOVp0  * fH0  + m_fFOVp1  * fH1  + m_fTFOVp0  * fH2  + m_fTFOVp1  * fH3 ;
#line 447 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOATquat3D qRot  = Squad  (fT  , m_qPNp0  , m_qPNp1  , m_qANp0  , m_qANp1 );
#line 448 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOATmatrix3D mRot ;
#line 449 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
qRot  . ToMatrix  (mRot );
#line 452 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOATmatrix3D mRotTarget0  = mRot ;
#line 453 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOATmatrix3D mRotTarget1  = mRot ;
#line 454 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
BOOL bDoTargeting  = FALSE ;
#line 455 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_penViewTarget0  != NULL ){
#line 456 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CalcTargetedRotation  (vPos  , m_penViewTarget0  , m_vPosRatio0  , mRotTarget0  , FALSE );
#line 457 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
bDoTargeting  = TRUE ;
#line 458 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 459 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_penViewTarget1  != NULL ){
#line 460 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CalcTargetedRotation  (vPos  , m_penViewTarget1  , m_vPosRatio1  , mRotTarget1  , FALSE );
#line 461 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
bDoTargeting  = TRUE ;
#line 462 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 465 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(bDoTargeting ){
#line 467 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOATquat3D qRot0 ;qRot0  . FromMatrix  (mRotTarget0 );
#line 468 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOATquat3D qRot1 ;qRot1  . FromMatrix  (mRotTarget1 );
#line 469 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOATquat3D qRot  = Slerp  (Clamp  (fT  , 0.0f , 1.0f) , qRot0  , qRot1 );
#line 470 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
qRot  . ToMatrix  (mRot );
#line 471 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 474 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
en_vNextPosition  = vPos ;
#line 475 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
en_mNextRotation  = mRot ;
#line 476 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CacheNearPolygons  ();
#line 479 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CPlacement3D plNew ;
#line 480 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
plNew  . pl_PositionVector  = vPos ;
#line 481 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
DecomposeRotationMatrixNoSnap  (plNew  . pl_OrientationAngle  , mRot );
#line 482 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
SetPlacement_special  (plNew  , mRot  , SPIF_NEAR );
#line 484 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(! bLerping ){
#line 486 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(! m_bStopLerp )
#line 487 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 488 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
en_plLastPlacement  = en_plPlacement ;
#line 489 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 490 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 492 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_fLastFOV  = m_fFOV ;
#line 493 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_fFOV  = fFOV ;
#line 494 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}

#line 497 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
void CCamera::PostMoving() 
#line 498 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 499 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(! m_bMoving ){
#line 500 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return ;
#line 501 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 503 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
extern  CInput  * _pInput ;
#line 504 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_bStopMoving  || 
#line 505 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
((_pInput  -> IsLMouseButtonPressed  () || _pInput  -> IsRMouseButtonPressed  ()) && 
#line 506 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
(! _bLoginProcess  || _bWorldEditorApp )))
#line 507 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 508 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_bMoving  = FALSE ;
#line 510 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
en_ulFlags  |= ENF_INRENDERING ;
#line 511 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
SendEvent  (EStop  ());
#line 512 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 513 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
BOOL CCamera::
#line 517 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CCamera_Main
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CCamera::Main expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 520 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
InitAsEditorModel  ();
#line 521 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
SetPhysicsFlags  (EPF_MOVABLE );
#line 522 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
SetCollisionFlags  (ECF_CAMERA );
#line 523 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
SetSpawnFlags  (GetSpawnFlags  () & ~ SPF_COOPERATIVE );
#line 526 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT fSize  = 5.0f;
#line 527 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
GetModelObject  () -> mo_Stretch  = FLOAT3D (fSize  , fSize  , fSize );
#line 528 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
SetModel  (MODEL_CAMERA );
#line 529 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
SetModelMainTexture  (TEXTURE_CAMERA );
#line 530 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_fLastFOV  = m_fFOV ;
#line 532 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_penTarget  != NULL  && ! IsOfClass  (m_penTarget  , & CCameraMarker_DLLClass ))
#line 533 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 534 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
WarningMessage  ("Entity '%s' is not of Camera Marker class!" , m_penTarget );
#line 535 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penTarget  = NULL ;
#line 536 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 538 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(!(m_bAutoRotation  || m_penTarget  != NULL )){ Jump(STATE_CURRENT,0x00dc0002, FALSE, EInternal());return TRUE;}
#line 540 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x00dc0000, FALSE, EBegin());return TRUE;}BOOL CCamera::H0x00dc0000_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dc0000
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00dc0001, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CCamera::H0x00dc0001_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dc0001
;Jump(STATE_CURRENT,0x00dc0002, FALSE, EInternal());return TRUE;}BOOL CCamera::H0x00dc0002_Main_03(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dc0002

#line 543 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_vRelTargetOffset  = FLOAT3D (0 , 0 , 0);
#line 544 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_penTarget  != NULL )
#line 545 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 546 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CCameraMarker  * pcm  = & (CCameraMarker  &) * m_penTarget ;
#line 547 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(pcm  -> m_penViewTarget  != NULL )
#line 548 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 549 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT3D vAbsTarget  = FLOAT3D (0 , 0 , 0);
#line 550 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
pcm  -> m_penViewTarget  -> GetEntityPointRatio  (pcm  -> m_vPosRatio  , vAbsTarget  , FALSE );
#line 551 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_vRelTargetOffset  = vAbsTarget  - pcm  -> m_penViewTarget  -> GetPlacement  () . pl_PositionVector ;
#line 552 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 553 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(pcm  -> m_bTargetCaller  && m_penPlayer  != NULL )
#line 554 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 555 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT3D vAbsTarget  = FLOAT3D (0 , 0 , 0);
#line 556 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penPlayer  -> GetEntityPointRatio  (pcm  -> m_vPosRatio  , vAbsTarget  , FALSE );
#line 557 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_vRelTargetOffset  = vAbsTarget  - m_penPlayer  -> GetPlacement  () . pl_PositionVector ;
#line 558 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 559 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 561 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Jump(STATE_CURRENT,0x00dc0005, FALSE, EInternal());return TRUE;}BOOL CCamera::H0x00dc0005_Main_06(const CEntityEvent &__eeInput)
#line 562 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dc0005
if(!(TRUE )){ Jump(STATE_CURRENT,0x00dc0006, FALSE, EInternal());return TRUE;}
#line 563 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00dc0003, FALSE, EBegin());return TRUE;}BOOL CCamera::H0x00dc0003_Main_04(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dc0003
switch(__eeInput.ee_slEvent)
#line 564 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{case(EVENTCODE_ETrigger):
#line 566 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{const ETrigger&eTrigger= (ETrigger&)__eeInput;

#line 569 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(_pNetwork  -> m_bSingleMode  && bPlayedCamera )
#line 570 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 571 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 572 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 575 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CEntity  * penCaused ;
#line 576 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
penCaused  = FixupCausedToPlayer  (this  , eTrigger  . penCaused  , FALSE );
#line 577 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(IsDerivedFromClass  (penCaused  , & CPlayer_DLLClass ))
#line 578 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 579 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penPlayer  = penCaused ;
#line 582 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(_pNetwork  -> m_bSingleMode )
#line 583 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 584 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
bPlayedCamera  = TRUE ;
#line 585 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 587 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_bActive )
#line 588 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 589 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Call(STATE_CURRENT, STATE_CCamera_PlayCamera, TRUE, EVoid());return TRUE;
#line 590 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 591 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 592 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 593 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStopLerp):
#line 596 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{const EStopLerp&eStop= (EStopLerp&)__eeInput;

#line 597 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_bStopLerp  = eStop  . bActive ;
#line 598 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 599 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}ASSERT(FALSE);break;case(EVENTCODE_EActivate):{const EActivate&e= (EActivate&)__eeInput;

#line 602 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_bActive  = TRUE ;
#line 603 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 604 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeactivate):{const EDeactivate&e= (EDeactivate&)__eeInput;

#line 607 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_bActive  = FALSE ;
#line 608 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 609 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 610 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}return TRUE;}BOOL CCamera::H0x00dc0004_Main_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dc0004
Jump(STATE_CURRENT,0x00dc0005, FALSE, EInternal());return TRUE;
#line 611 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}BOOL CCamera::H0x00dc0006_Main_07(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dc0006
;
#line 614 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Destroy  ();
#line 615 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Return(STATE_CURRENT,EVoid());
#line 615 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CCamera::
#line 619 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
PlayStaticCamera(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CCamera_PlayStaticCamera
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CCamera::PlayStaticCamera expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 621 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_penActionTarget  != NULL )
#line 622 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 623 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
SendToTarget  (m_penActionTarget  , EET_START  , this );
#line 624 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 626 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_bMoving  = FALSE ;
#line 627 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
ECameraStart  eStart ;
#line 628 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
eStart  . penCamera  = this ;
#line 629 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penPlayer  -> SendEvent  (eStart );
#line 631 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
SetTimerAfter(m_tmTime );
Jump(STATE_CURRENT, 0x00dc0008, FALSE, EBegin());return TRUE;}BOOL CCamera::H0x00dc0008_PlayStaticCamera_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dc0008
switch(__eeInput.ee_slEvent)
#line 632 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x00dc0009, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_ETrigger):{const ETrigger&e= (ETrigger&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x00dc0009, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default: return FALSE; break;
#line 635 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}return TRUE;}BOOL CCamera::H0x00dc0009_PlayStaticCamera_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dc0009

#line 637 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_bActive  = FALSE ;
#line 638 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
ECameraStop  eStop ;
#line 639 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
eStop  . penCamera  = this ;
#line 640 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penPlayer  -> SendEvent  (eStop );
#line 641 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_penActionTarget  != NULL )
#line 642 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 643 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
SendToTarget  (m_penActionTarget  , EET_STOP  , this );
#line 644 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 645 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Return(STATE_CURRENT,EVoid());
#line 645 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CCamera::
#line 649 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
PlayAutoRotatingCamera(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CCamera_PlayAutoRotatingCamera
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CCamera::PlayAutoRotatingCamera expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 652 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
AddToMovers  ();
#line 653 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_bMoving  = TRUE ;
#line 654 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
ECameraStart  eStart ;
#line 655 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
eStart  . penCamera  = this ;
#line 656 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penPlayer  -> SendEvent  (eStart );
#line 658 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00dc000b, FALSE, EBegin());return TRUE;}BOOL CCamera::H0x00dc000b_PlayAutoRotatingCamera_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dc000b
switch(__eeInput.ee_slEvent){case(EVENTCODE_EStop):{const EStop&e= (EStop&)__eeInput;

#line 660 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
ECameraStop  eStop ;
#line 661 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
eStop  . penCamera  = this ;
#line 662 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penPlayer  -> SendEvent  (eStop );
#line 663 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_penAutoCameraEndTarget  != NULL )
#line 664 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 665 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
SendToTarget  (m_penAutoCameraEndTarget  , m_eetAutoCameraEndEvent  , m_penPlayer );
#line 666 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 667 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Return(STATE_CURRENT,EVoid());
#line 667 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 668 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStart):{const EStart&e= (EStart&)__eeInput;

#line 670 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
ECameraStart  eStart ;
#line 671 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
eStart  . penCamera  = this ;
#line 672 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penPlayer  -> SendEvent  (eStart );
#line 673 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 674 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETrigger):
#line 676 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{const ETrigger&eTrigger= (ETrigger&)__eeInput;

#line 678 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(_pNetwork  -> m_bSingleMode  && bPlayedCamera )
#line 679 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 680 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 681 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 683 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CEntity  * penCaused ;
#line 684 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
penCaused  = FixupCausedToPlayer  (this  , eTrigger  . penCaused  , FALSE );
#line 685 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(IsDerivedFromClass  (penCaused  , & CPlayer_DLLClass ))
#line 686 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 687 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penPlayer  = penCaused ;
#line 689 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(_pNetwork  -> m_bSingleMode )
#line 690 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 691 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
bPlayedCamera  = TRUE ;
#line 692 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 693 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Call(STATE_CURRENT, STATE_CCamera_PlayCamera, TRUE, EVoid());return TRUE;
#line 694 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 695 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 696 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}ASSERT(FALSE);break;default:{
#line 698 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 699 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}ASSERT(FALSE);break;
#line 700 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}return TRUE;}BOOL CCamera::H0x00dc000c_PlayAutoRotatingCamera_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dc000c

#line 701 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Return(STATE_CURRENT,EVoid());
#line 701 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CCamera::
#line 705 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
PlayMovingCamera(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CCamera_PlayMovingCamera
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CCamera::PlayMovingCamera expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 708 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
ECameraStart  eStart ;
#line 709 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
eStart  . penCamera  = this ;
#line 710 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penPlayer  -> SendEvent  (eStart );
#line 713 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
INDEX ctMarkers  = 1;
#line 714 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
INDEX ctNonSkipped  = 0;
#line 715 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CCameraMarker  * pcm0  = (CCameraMarker  *) & * m_penTarget ;
#line 716 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CCameraMarker  * pcm  = (CCameraMarker  *) & * pcm0  -> m_penTarget ;
#line 718 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
while(pcm  != NULL  && pcm  -> m_penTarget  != pcm0 )
#line 719 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 720 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
pcm  = (CCameraMarker  *) & * pcm  -> m_penTarget ;
#line 721 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(pcm  == NULL ){
#line 722 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
WarningMessage  ("Movable camera - broken link!");
#line 723 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Return(STATE_CURRENT,EVoid());
#line 723 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 724 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 725 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(! pcm  -> m_bSkipToNext ){
#line 726 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
ctNonSkipped  ++;
#line 727 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 728 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
ctMarkers  ++;
#line 729 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(ctMarkers  > 500){
#line 730 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
WarningMessage  ("Movable camera - invalid marker loop!");
#line 731 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Return(STATE_CURRENT,EVoid());
#line 731 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 732 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 733 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 735 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(ctMarkers  < 2){
#line 736 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
WarningMessage  ("Movable camera requires at least 2 markers in order to work!");
#line 737 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Return(STATE_CURRENT,EVoid());
#line 737 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 738 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 740 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(ctNonSkipped  < 1){
#line 741 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
WarningMessage  ("Movable camera requires at least 1 non-skipped marker!");
#line 742 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Return(STATE_CURRENT,EVoid());
#line 742 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 743 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 746 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
FLOAT tmCurrent ;
#line 747 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(! m_bIgnoreTimeStretch )
#line 748 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 749 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
tmCurrent  = _pTimer  -> CurrentTick  ();
#line 750 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 751 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
else 
#line 752 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 753 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
tmCurrent  = m_fMyTimer ;
#line 754 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 756 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_tmAtMarker  = tmCurrent ;
#line 757 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_tmDelta  = 0.0f;
#line 758 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_bStopMoving  = FALSE ;
#line 759 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penLast  = pcm ;
#line 760 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
ASSERT  (pcm  -> m_penTarget  == m_penTarget );
#line 761 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
pcm  = (CCameraMarker  *) & * m_penTarget ;
#line 762 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_colFade0  = m_colFade1  = pcm  -> m_colFade ;
#line 765 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
AddToMovers  ();
#line 766 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_bMoving  = TRUE ;
#line 769 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00dc000e, FALSE, EBegin());return TRUE;}BOOL CCamera::H0x00dc000e_PlayMovingCamera_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dc000e
switch(__eeInput.ee_slEvent){case(EVENTCODE_EStop):{const EStop&e= (EStop&)__eeInput;

#line 771 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
ECameraStop  eStop ;
#line 772 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
eStop  . penCamera  = this ;
#line 773 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penPlayer  -> SendEvent  (eStop );
#line 774 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Return(STATE_CURRENT,EVoid());
#line 774 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 775 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStart):{const EStart&e= (EStart&)__eeInput;

#line 777 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
ECameraStart  eStart ;
#line 778 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
eStart  . penCamera  = this ;
#line 779 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penPlayer  -> SendEvent  (eStart );
#line 780 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 781 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETrigger):
#line 783 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{const ETrigger&eTrigger= (ETrigger&)__eeInput;

#line 785 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(_pNetwork  -> m_bSingleMode  && bPlayedCamera )
#line 786 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 787 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 788 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 790 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CEntity  * penCaused ;
#line 791 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
penCaused  = FixupCausedToPlayer  (this  , eTrigger  . penCaused  , FALSE );
#line 792 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(IsDerivedFromClass  (penCaused  , & CPlayer_DLLClass ))
#line 793 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 794 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
m_penPlayer  = penCaused ;
#line 796 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(_pNetwork  -> m_bSingleMode )
#line 797 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 798 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
bPlayedCamera  = TRUE ;
#line 799 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 800 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Call(STATE_CURRENT, STATE_CCamera_PlayCamera, TRUE, EVoid());return TRUE;
#line 801 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 802 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 803 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}ASSERT(FALSE);break;default:{
#line 805 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE;
#line 806 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}ASSERT(FALSE);break;
#line 807 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}return TRUE;}BOOL CCamera::H0x00dc000f_PlayMovingCamera_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dc000f

#line 810 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Return(STATE_CURRENT,EVoid());
#line 810 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CCamera::
#line 815 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
PlayCamera(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CCamera_PlayCamera
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CCamera::PlayCamera expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 818 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
CCameraMarker  & cm  = (CCameraMarker  &) * m_penTarget ;
#line 820 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
if(m_bAutoRotation )
#line 821 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 822 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Jump(STATE_CURRENT, STATE_CCamera_PlayAutoRotatingCamera, TRUE, EVoid());return TRUE;
#line 823 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 825 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
else if(& cm  != NULL )
#line 826 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 828 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Jump(STATE_CURRENT, STATE_CCamera_PlayMovingCamera, TRUE, EVoid());return TRUE;
#line 829 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
}
#line 830 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
else 
#line 831 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
{
#line 833 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
Jump(STATE_CURRENT, STATE_CCamera_PlayStaticCamera, TRUE, EVoid());return TRUE;
#line 834 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/Camera.es"
} ASSERT(FALSE); return TRUE;};
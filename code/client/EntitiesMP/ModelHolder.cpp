/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"

#include "StdH.h"

#include <ModelHolder.h>
#include <ModelHolder_tables.h>
void CModelHolder::SetDefaultProperties(void) {
	m_fnModel = CTFILENAME("Data\\Models\\Editor\\Axis.mdl");
	m_fnTexture = CTFILENAME("Data\\Models\\Editor\\Vector.tex");
	m_fStretchAll = 1.0f;
	m_fStretchX = 1.0f;
	m_fStretchY = 1.0f;
	m_fStretchZ = 1.0f;
	m_strName = "";
	m_strDescription = "";
	m_bColliding = FALSE ;
	m_iModelAnimation = 0;
	m_iTextureAnimation = 0;
	m_bClusterShadows = FALSE ;
	m_bBackground = FALSE ;
	m_bCustomShading = FALSE ;
	m_aShadingDirection = ANGLE3D(AngleDeg  (45.0f) , AngleDeg  (45.0f) , AngleDeg  (45.0f));
	m_colLight = C_WHITE ;
	m_colAmbient = C_BLACK ;
	m_fnmLightAnimation = CTString("");
	m_iLightAnimation = 0;
	m_aoLightAnimation.SetData(NULL);

	CEntity::SetDefaultProperties();
}

#line 42 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
CAnimData * CModelHolder::GetAnimData(SLONG slPropertyOffset) 
#line 43 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
{
#line 44 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
if(slPropertyOffset  == offsetof  (CModelHolder  , m_iModelAnimation )){
#line 45 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
return GetModelObject  () -> GetData  ();
#line 46 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}else if(slPropertyOffset  == offsetof  (CModelHolder  , m_iTextureAnimation )){
#line 47 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
return GetModelObject  () -> mo_toTexture  . GetData  ();
#line 48 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}else if(slPropertyOffset  == offsetof  (CModelHolder  , m_iLightAnimation )){
#line 49 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
return m_aoLightAnimation  . GetData  ();
#line 50 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}else {
#line 51 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
return CEntity  :: GetAnimData  (slPropertyOffset );
#line 52 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}
#line 53 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}

#line 56 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
BOOL CModelHolder::AdjustShadingParameters(FLOAT3D & vLightDirection,COLOR & colLight,COLOR & colAmbient) 
#line 57 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
{
#line 58 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
if(m_bCustomShading ){
#line 60 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
if(m_aoLightAnimation  . GetData  () != NULL ){
#line 62 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
SLONG  colFrame0  , colFrame1 ;FLOAT fRatio ;
#line 63 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
m_aoLightAnimation  . GetFrame  (colFrame0  , colFrame1  , fRatio );
#line 64 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
UBYTE  ubAnimR0  , ubAnimG0  , ubAnimB0 ;
#line 65 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
UBYTE  ubAnimR1  , ubAnimG1  , ubAnimB1 ;
#line 66 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
ColorToRGB  (colFrame0  , ubAnimR0  , ubAnimG0  , ubAnimB0 );
#line 67 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
ColorToRGB  (colFrame1  , ubAnimR1  , ubAnimG1  , ubAnimB1 );
#line 70 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
FLOAT fAnimR  = NormByteToFloat  (Lerp  (ubAnimR0  , ubAnimR1  , fRatio ));
#line 71 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
FLOAT fAnimG  = NormByteToFloat  (Lerp  (ubAnimG0  , ubAnimG1  , fRatio ));
#line 72 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
FLOAT fAnimB  = NormByteToFloat  (Lerp  (ubAnimB0  , ubAnimB1  , fRatio ));
#line 75 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
UBYTE  ubLightR  , ubLightG  , ubLightB ;
#line 76 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
UBYTE  ubAmbientR  , ubAmbientG  , ubAmbientB ;
#line 77 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
ColorToRGB  (m_colLight  , ubLightR  , ubLightG  , ubLightB );
#line 78 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
ColorToRGB  (m_colAmbient  , ubAmbientR  , ubAmbientG  , ubAmbientB );
#line 79 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
colLight  = RGBToColor  (ubLightR  * fAnimR  , ubLightG  * fAnimG  , ubLightB  * fAnimB );
#line 80 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
colAmbient  = RGBToColor  (ubAmbientR  * fAnimR  , ubAmbientG  * fAnimG  , ubAmbientB  * fAnimB );
#line 83 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}else {
#line 84 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
colLight  = m_colLight ;
#line 85 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
colAmbient  = m_colAmbient ;
#line 86 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}
#line 88 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
AnglesToDirectionVector  (m_aShadingDirection  , vLightDirection );
#line 89 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
vLightDirection  = - vLightDirection ;
#line 90 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}
#line 91 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
return TRUE ;
#line 92 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}

#line 95 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
void CModelHolder::InitModelHolder(void) {
#line 97 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
if(m_fStretchX  < 0.01f){m_fStretchX  = 0.01f;}
#line 98 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
if(m_fStretchY  < 0.01f){m_fStretchY  = 0.01f;}
#line 99 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
if(m_fStretchZ  < 0.01f){m_fStretchZ  = 0.01f;}
#line 100 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
if(m_fStretchAll  < 0.01f){m_fStretchAll  = 0.01f;}
#line 101 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
if(m_fStretchX  > 100.0f){m_fStretchX  = 100.0f;}
#line 102 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
if(m_fStretchY  > 100.0f){m_fStretchY  = 100.0f;}
#line 103 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
if(m_fStretchZ  > 100.0f){m_fStretchZ  = 100.0f;}
#line 104 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
if(m_fStretchAll  > 100.0f){m_fStretchAll  = 100.0f;}
#line 107 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
if(m_fnOldModel  == ""){
#line 109 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
m_fnOldModel  = m_fnModel ;
#line 111 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}else {
#line 113 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
if(m_fnOldModel  != m_fnModel ){
#line 115 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
m_fnTexture  = m_fnModel  . FileDir  () + m_fnModel  . FileName  () + CTString (".tex");
#line 117 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
m_fnOldModel  = m_fnModel ;
#line 118 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}
#line 119 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}
#line 121 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
InitAsModel  ();
#line 122 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
if(m_bColliding ){
#line 123 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
SetPhysicsFlags  (EPF_MODEL_FIXED );
#line 124 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
SetCollisionFlags  (ECF_MODEL_HOLDER );
#line 125 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}else {
#line 126 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 127 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 128 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}
#line 130 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
if(m_bClusterShadows ){
#line 131 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
SetFlags  (GetFlags  () | ENF_CLUSTERSHADOWS );
#line 132 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}else {
#line 133 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
SetFlags  (GetFlags  () & ~ ENF_CLUSTERSHADOWS );
#line 134 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}
#line 136 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
if(m_bBackground ){
#line 137 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
SetFlags  (GetFlags  () | ENF_BACKGROUND );
#line 138 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}else {
#line 139 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
SetFlags  (GetFlags  () & ~ ENF_BACKGROUND );
#line 140 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}
#line 143 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
GetModelObject  () -> mo_Stretch  = FLOAT3D (
#line 144 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
m_fStretchAll  * m_fStretchX  , 
#line 145 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
m_fStretchAll  * m_fStretchY  , 
#line 146 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
m_fStretchAll  * m_fStretchZ );
#line 149 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
SetModel  (m_fnModel );
#line 150 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
SetModelMainTexture  (m_fnTexture );
#line 152 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
GetModelObject  () -> PlayAnim  (m_iModelAnimation  , AOF_LOOPING );
#line 153 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
GetModelObject  () -> mo_toTexture  . PlayAnim  (m_iTextureAnimation  , AOF_LOOPING );
#line 155 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
try {
#line 156 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
m_aoLightAnimation  . SetData_t  (m_fnmLightAnimation );
#line 157 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}catch  (char  * strError ){
#line 158 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
WarningMessage  (TRANS  ("Cannot load '%s': %s") , (CTString &) m_fnmLightAnimation  , strError );
#line 159 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
m_fnmLightAnimation  = "";
#line 160 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}
#line 161 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
if(m_aoLightAnimation  . GetData  () != NULL ){
#line 162 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
m_aoLightAnimation  . PlayAnim  (m_iLightAnimation  , AOF_LOOPING );
#line 163 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}
#line 165 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
m_strDescription  . PrintF  ("%s,%s" , (CTString &) m_fnModel  . FileName  () , (CTString &) m_fnTexture  . FileName  ());
#line 167 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
return ;
#line 168 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
}
BOOL CModelHolder::
#line 171 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CModelHolder_Main
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CModelHolder::Main expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 173 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
InitModelHolder  ();
#line 174 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
Return(STATE_CURRENT,EVoid());
#line 174 "F:/SD-Source/mandra/Reco_Csrc/EntitiesMP/ModelHolder.es"
return TRUE; ASSERT(FALSE); return TRUE;};